{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Reactstorefront/base_reactstorefront/AK-React-Base/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Reactstorefront\\\\base_reactstorefront\\\\AK-React-Base\\\\components\\\\search\\\\SearchDesktop.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState, useRef } from 'react';\nimport SearchForm from 'react-storefront/search/SearchForm';\nimport SearchField from 'react-storefront/search/SearchField';\nimport SearchSuggestions from 'react-storefront/search/SearchSuggestions';\nimport SearchProvider from 'react-storefront/search/SearchProvider';\nimport SearchPopover from 'react-storefront/search/SearchPopover';\nimport makeStyles from \"@material-ui/styles/makeStyles\";\nimport LazyHydrate from 'react-storefront/LazyHydrate';\nvar useStyles = makeStyles(function (theme) {\n  return _defineProperty({\n    root: {\n      display: 'none'\n    }\n  }, theme.breakpoints.up('sm'), {\n    root: {\n      display: 'block'\n    }\n  });\n});\n\nfunction SearchDesktop() {\n  _s();\n\n  var inputRef = useRef(null);\n  var activeRef = useRef(false);\n\n  var _useState = useState(''),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var _useState2 = useState(false),\n      popoverOpen = _useState2[0],\n      setPopoverOpen = _useState2[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    if (!activeRef.current) {\n      activeRef.current = true;\n    }\n  }, [popoverOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(LazyHydrate, {\n      id: \"search-desktop\",\n      on: \"touch\",\n      children: /*#__PURE__*/_jsxDEV(SearchForm, {\n        children: [/*#__PURE__*/_jsxDEV(SearchField, {\n          ref: inputRef,\n          onChange: function onChange(value) {\n            return setQuery(value);\n          },\n          value: query,\n          onFocus: function onFocus() {\n            return setPopoverOpen(true);\n          },\n          submitButtonVariant: \"none\",\n          showClearButton: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchProvider, {\n          query: query,\n          active: activeRef.current,\n          children: /*#__PURE__*/_jsxDEV(SearchPopover, {\n            open: popoverOpen,\n            setQuery: setQuery,\n            anchor: inputRef,\n            onClose: function onClose() {\n              return setPopoverOpen(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(SearchSuggestions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchDesktop, \"o6ICLQaaz6uiv5B2uy3WI70Nppk=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchDesktop;\nexport default _c2 = /*#__PURE__*/memo(SearchDesktop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchDesktop\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Reactstorefront/base_reactstorefront/AK-React-Base/components/search/SearchDesktop.js"],"names":["React","memo","useEffect","useState","useRef","SearchForm","SearchField","SearchSuggestions","SearchProvider","SearchPopover","LazyHydrate","useStyles","makeStyles","theme","root","display","breakpoints","up","SearchDesktop","inputRef","activeRef","query","setQuery","popoverOpen","setPopoverOpen","classes","current","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,MAA3C,QAAyD,OAAzD;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,IAAMC,SAAS,GAAGC,UAAU,CAAC,UAAAC,KAAK;AAAA;AAChCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL;AAD0B,KAI/BF,KAAK,CAACG,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAJ+B,EAIF;AAC5BH,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL;AADsB,GAJE;AAAA,CAAN,CAA5B;;AAWA,SAASG,aAAT,GAAyB;AAAA;;AACvB,MAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,MAAMgB,SAAS,GAAGhB,MAAM,CAAC,KAAD,CAAxB;;AAFuB,kBAGGD,QAAQ,CAAC,EAAD,CAHX;AAAA,MAGhBkB,KAHgB;AAAA,MAGTC,QAHS;;AAAA,mBAIenB,QAAQ,CAAC,KAAD,CAJvB;AAAA,MAIhBoB,WAJgB;AAAA,MAIHC,cAJG;;AAKvB,MAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACkB,SAAS,CAACM,OAAf,EAAwB;AACtBN,MAAAA,SAAS,CAACM,OAAV,GAAoB,IAApB;AACD;AACF,GAJQ,EAIN,CAACH,WAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACX,IAAxB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,gBAAhB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,GAAG,EAAEK,QADP;AAEE,UAAA,QAAQ,EAAE,kBAAAQ,KAAK;AAAA,mBAAIL,QAAQ,CAACK,KAAD,CAAZ;AAAA,WAFjB;AAGE,UAAA,KAAK,EAAEN,KAHT;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMG,cAAc,CAAC,IAAD,CAApB;AAAA,WAJX;AAKE,UAAA,mBAAmB,EAAC,MALtB;AAME,UAAA,eAAe,EAAE;AANnB;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEH,KAAvB;AAA8B,UAAA,MAAM,EAAED,SAAS,CAACM,OAAhD;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,IAAI,EAAEH,WADR;AAEE,YAAA,QAAQ,EAAED,QAFZ;AAGE,YAAA,MAAM,EAAEH,QAHV;AAIE,YAAA,OAAO,EAAE;AAAA,qBAAMK,cAAc,CAAC,KAAD,CAApB;AAAA,aAJX;AAAA,mCAME,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvCQN,a;UAKSP,S;;;KALTO,a;AAyCT,kCAAejB,IAAI,CAACiB,aAAD,CAAnB","sourcesContent":["import React, { memo, useEffect, useState, useRef } from 'react'\nimport SearchForm from 'react-storefront/search/SearchForm'\nimport SearchField from 'react-storefront/search/SearchField'\nimport SearchSuggestions from 'react-storefront/search/SearchSuggestions'\nimport SearchProvider from 'react-storefront/search/SearchProvider'\nimport SearchPopover from 'react-storefront/search/SearchPopover'\nimport { makeStyles } from '@material-ui/styles'\nimport LazyHydrate from 'react-storefront/LazyHydrate'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'none',\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      display: 'block',\n    },\n  },\n}))\n\nfunction SearchDesktop() {\n  const inputRef = useRef(null)\n  const activeRef = useRef(false)\n  const [query, setQuery] = useState('')\n  const [popoverOpen, setPopoverOpen] = useState(false)\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (!activeRef.current) {\n      activeRef.current = true\n    }\n  }, [popoverOpen])\n\n  return (\n    <div className={classes.root}>\n      <LazyHydrate id=\"search-desktop\" on=\"touch\">\n        <SearchForm>\n          <SearchField\n            ref={inputRef}\n            onChange={value => setQuery(value)}\n            value={query}\n            onFocus={() => setPopoverOpen(true)}\n            submitButtonVariant=\"none\"\n            showClearButton={false}\n          />\n          <SearchProvider query={query} active={activeRef.current}>\n            <SearchPopover\n              open={popoverOpen}\n              setQuery={setQuery}\n              anchor={inputRef}\n              onClose={() => setPopoverOpen(false)}\n            >\n              <SearchSuggestions />\n            </SearchPopover>\n          </SearchProvider>\n        </SearchForm>\n      </LazyHydrate>\n    </div>\n  )\n}\n\nexport default memo(SearchDesktop)\n"]},"metadata":{},"sourceType":"module"}