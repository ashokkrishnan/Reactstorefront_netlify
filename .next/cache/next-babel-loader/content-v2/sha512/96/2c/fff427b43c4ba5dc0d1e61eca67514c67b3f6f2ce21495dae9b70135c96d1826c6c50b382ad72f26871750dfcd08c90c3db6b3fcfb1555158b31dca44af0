{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Reactstorefront\\\\base_reactstorefront\\\\AK-React-Base\\\\pages\\\\_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../components/theme';\nimport renderAmp from 'react-storefront-amp/renderAmp';\nimport minifyStyles from 'react-storefront/utils/minifyStyles';\nimport { LazyStyles } from 'react-storefront/LazyHydrate';\n\nclass MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          charSet: \"utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: theme.palette.primary.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://opt.moovweb.net\",\n          crossOrigin: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {\n          mode: \"defer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const isAmp = ctx.req.url.includes('amp=1'); // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n  ctx.res.setHeader('service-worker-allowed', '/');\n\n  ctx.renderPage = async () => {\n    const document = originalRenderPage({\n      enhanceApp: App => props => sheets.collect( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 50\n      }, this))\n    });\n    return isAmp ? await renderAmp(document, sheets, ctx.req.url) : document;\n  };\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  function getStyles() {\n    if (isAmp) {\n      const index = initialProps.head.findIndex(item => item.key === 'amp-custom');\n      const css = initialProps.head[index].props['amp-custom']; // Remove unneeded style tag\n\n      initialProps.head.splice(index, 1);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [initialProps.styles, /*#__PURE__*/_jsxDEV(\"style\", {\n          dangerouslySetInnerHTML: {\n            __html: css\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [initialProps.styles, /*#__PURE__*/_jsxDEV(\"style\", {\n          dangerouslySetInnerHTML: {\n            __html: minifyStyles(sheets.toString())\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: getStyles()\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["C:/Reactstorefront/base_reactstorefront/AK-React-Base/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","theme","renderAmp","minifyStyles","LazyStyles","MyDocument","render","palette","primary","main","getInitialProps","ctx","isAmp","req","url","includes","sheets","originalRenderPage","renderPage","res","setHeader","document","enhanceApp","App","props","collect","initialProps","getStyles","index","head","findIndex","item","key","css","splice","styles","__html","toString"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheets } from '@material-ui/core/styles'\nimport theme from '../components/theme'\nimport renderAmp from 'react-storefront-amp/renderAmp'\nimport minifyStyles from 'react-storefront/utils/minifyStyles'\nimport { LazyStyles } from 'react-storefront/LazyHydrate'\n\nclass MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link rel=\"preconnect\" href=\"https://opt.moovweb.net\" crossOrigin=\"true\" />\n          <LazyStyles />\n        </Head>\n        <body>\n          <Main />\n          <NextScript mode=\"defer\" />\n        </body>\n      </Html>\n    )\n  }\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const isAmp = ctx.req.url.includes('amp=1')\n\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets()\n  const originalRenderPage = ctx.renderPage\n\n  ctx.res.setHeader('service-worker-allowed', '/')\n\n  ctx.renderPage = async () => {\n    const document = originalRenderPage({\n      enhanceApp: App => props => sheets.collect(<App {...props} />),\n    })\n\n    return isAmp ? await renderAmp(document, sheets, ctx.req.url) : document\n  }\n\n  const initialProps = await Document.getInitialProps(ctx)\n\n  function getStyles() {\n    if (isAmp) {\n      const index = initialProps.head.findIndex(item => item.key === 'amp-custom')\n      const css = initialProps.head[index].props['amp-custom']\n      // Remove unneeded style tag\n      initialProps.head.splice(index, 1)\n      return (\n        <>\n          {initialProps.styles}\n          <style dangerouslySetInnerHTML={{ __html: css }} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          {initialProps.styles}\n          <style dangerouslySetInnerHTML={{ __html: minifyStyles(sheets.toString()) }} />\n        </>\n      )\n    }\n  }\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: getStyles(),\n  }\n}\n\nexport default MyDocument\n"]},"metadata":{},"sourceType":"module"}