{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from 'react-storefront-amp/AmpAppBar';\nimport CartButton from 'react-storefront/CartButton';\nimport Search from './search/Search';\nimport Logo from '../components/assets/react-storefront-logo.svg';\nimport Container from \"@material-ui/core/Container\";\nimport Menu from 'react-storefront-amp/menu/AmpMenu';\nimport MenuButton from 'react-storefront/menu/MenuButton';\nimport Link from 'react-storefront/link/Link';\nimport SessionContext from 'react-storefront/session/SessionContext';\nimport useCartTotal from 'react-storefront/hooks/useCartTotal';\nimport LazyHydrate from 'react-storefront/LazyHydrate';\nconst useStyles = makeStyles(theme => ({\n  title: {},\n  logo: {\n    position: 'absolute',\n    left: 10,\n    top: 0,\n    [theme.breakpoints.down('xs')]: {\n      left: '50%',\n      top: 6,\n      marginLeft: -60\n    }\n  },\n  toolbar: {\n    padding: 0,\n    margin: 0\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      padding: 5\n    }\n  },\n  accountLink: {\n    display: 'block',\n    color: '#000',\n    textTransform: 'uppercase',\n    textDecoration: 'none'\n  }\n}));\nexport default function Header({\n  menu\n}) {\n  const classes = useStyles();\n  const {\n    0: menuOpen,\n    1: setMenuOpen\n  } = useState(false);\n  const {\n    0: hydrateMenu,\n    1: setHydrateMenu\n  } = useState(false);\n  const handleMenuClose = useCallback(() => setMenuOpen(false), []);\n  const handleMenuButtonClick = useCallback(() => {\n    setMenuOpen(menuOpen => !menuOpen);\n    setHydrateMenu(true);\n  }, []);\n  const {\n    session\n  } = useContext(SessionContext);\n  const cartTotal = useCartTotal();\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(AppBar, {\n      children: /*#__PURE__*/_jsxs(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            \"aria-label\": \"logo\",\n            children: /*#__PURE__*/_jsx(Logo, {\n              style: {\n                width: 120,\n                height: 48\n              },\n              className: classes.logo\n            })\n          })\n        }), /*#__PURE__*/_jsx(Search, {}), /*#__PURE__*/_jsx(CartButton, {\n          quantity: cartTotal\n        }), /*#__PURE__*/_jsx(MenuButton, {\n          open: menuOpen,\n          onClick: handleMenuButtonClick\n        })]\n      })\n    }), /*#__PURE__*/_jsx(LazyHydrate, {\n      id: \"menu\",\n      hydrated: hydrateMenu,\n      children: /*#__PURE__*/_jsx(Menu, {\n        anchor: \"right\",\n        root: menu,\n        open: menuOpen,\n        onClose: handleMenuClose // renderItem={item => <div>{item.text} (custom)</div>}\n        // renderItemContent={item => <div>{item.text} (custom content)</div>}\n        // renderBack={item => <div>{item.text} back</div>}\n        ,\n        renderHeader: item => {\n          if (!item.root) return null;\n          return /*#__PURE__*/_jsx(Link, {\n            as: \"/account\",\n            href: \"/account\",\n            onClick: () => setMenuOpen(false),\n            className: classes.accountLink,\n            children: \"My Account\"\n          });\n        } // renderFooter={item => <div>{item.text} footer</div>}\n\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}