{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Reactstorefront\\\\base_reactstorefront\\\\AK-React-Base\\\\components\\\\search\\\\SearchMobile.js\";\nimport React, { useState, memo, useCallback } from 'react';\nimport SearchHeader from 'react-storefront/search/SearchHeader';\nimport SearchForm from 'react-storefront/search/SearchForm';\nimport SearchField from 'react-storefront-amp/search/AmpSearchField';\nimport SearchDrawer from 'react-storefront-amp/search/AmpSearchDrawer';\nimport SearchButton from 'react-storefront-amp/search/AmpSearchButton';\nimport SearchSuggestions from 'react-storefront-amp/search/AmpSearchSuggestions';\nimport SearchProvider from 'react-storefront/search/SearchProvider';\nimport LazyHydrate from 'react-storefront/LazyHydrate';\nimport makeStyles from \"@material-ui/styles/makeStyles\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'none'\n  },\n  [theme.breakpoints.down('xs')]: {\n    button: {\n      display: 'block'\n    }\n  }\n}));\n\nfunction SearchMobile() {\n  const {\n    0: drawerOpen,\n    1: setDrawerOpen\n  } = useState(false);\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const {\n    0: hydrated,\n    1: setHydrated\n  } = useState(false);\n\n  const toggleDrawer = () => setDrawerOpen(!drawerOpen);\n\n  const closeDrawer = () => setDrawerOpen(false);\n\n  const classes = useStyles();\n  const hydrate = useCallback(() => {\n    setHydrated(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchButton, {\n      className: classes.button,\n      onClick: toggleDrawer,\n      onTouchStart: hydrate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LazyHydrate, {\n      id: \"search-mobile\",\n      hydrated: hydrated,\n      children: /*#__PURE__*/_jsxDEV(SearchDrawer, {\n        open: drawerOpen,\n        onClose: closeDrawer,\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          children: [/*#__PURE__*/_jsxDEV(SearchHeader, {\n            children: /*#__PURE__*/_jsxDEV(SearchField, {\n              onChange: value => setQuery(value),\n              value: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchProvider, {\n            query: query,\n            active: drawerOpen,\n            children: /*#__PURE__*/_jsxDEV(SearchSuggestions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default /*#__PURE__*/memo(SearchMobile);","map":{"version":3,"sources":["C:/Reactstorefront/base_reactstorefront/AK-React-Base/components/search/SearchMobile.js"],"names":["React","useState","memo","useCallback","SearchHeader","SearchForm","SearchField","SearchDrawer","SearchButton","SearchSuggestions","SearchProvider","LazyHydrate","useStyles","makeStyles","theme","button","display","breakpoints","down","SearchMobile","drawerOpen","setDrawerOpen","query","setQuery","hydrated","setHydrated","toggleDrawer","closeDrawer","classes","hydrate","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,WAAhC,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAGA,MAAMC,SAAS,GAAGC,UAAU,CAACC,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAD6B;AAIrC,GAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BH,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AADsB;AAJK,CAAL,CAAN,CAA5B;;AAWA,SAASG,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACqB,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACuB,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMyB,YAAY,GAAG,MAAML,aAAa,CAAC,CAACD,UAAF,CAAxC;;AACA,QAAMO,WAAW,GAAG,MAAMN,aAAa,CAAC,KAAD,CAAvC;;AACA,QAAMO,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,OAAO,GAAG1B,WAAW,CAAC,MAAM;AAChCsB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEG,OAAO,CAACb,MAAjC;AAAyC,MAAA,OAAO,EAAEW,YAAlD;AAAgE,MAAA,YAAY,EAAEG;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAEL,QAA1C;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEJ,UAApB;AAAgC,QAAA,OAAO,EAAEO,WAAzC;AAAA,+BACE,QAAC,UAAD;AAAA,kCACE,QAAC,YAAD;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,QAAQ,EAAEG,KAAK,IAAIP,QAAQ,CAACO,KAAD,CAAxC;AAAiD,cAAA,KAAK,EAAER;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAEA,KAAvB;AAA8B,YAAA,MAAM,EAAEF,UAAtC;AAAA,mCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD;;AAED,4BAAelB,IAAI,CAACiB,YAAD,CAAnB","sourcesContent":["import React, { useState, memo, useCallback } from 'react'\nimport SearchHeader from 'react-storefront/search/SearchHeader'\nimport SearchForm from 'react-storefront/search/SearchForm'\nimport SearchField from 'react-storefront-amp/search/AmpSearchField'\nimport SearchDrawer from 'react-storefront-amp/search/AmpSearchDrawer'\nimport SearchButton from 'react-storefront-amp/search/AmpSearchButton'\nimport SearchSuggestions from 'react-storefront-amp/search/AmpSearchSuggestions'\nimport SearchProvider from 'react-storefront/search/SearchProvider'\nimport LazyHydrate from 'react-storefront/LazyHydrate'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'none',\n  },\n  [theme.breakpoints.down('xs')]: {\n    button: {\n      display: 'block',\n    },\n  },\n}))\n\nfunction SearchMobile() {\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const [query, setQuery] = useState('')\n  const [hydrated, setHydrated] = useState(false)\n  const toggleDrawer = () => setDrawerOpen(!drawerOpen)\n  const closeDrawer = () => setDrawerOpen(false)\n  const classes = useStyles()\n  const hydrate = useCallback(() => {\n    setHydrated(true)\n  }, [])\n\n  return (\n    <>\n      <SearchButton className={classes.button} onClick={toggleDrawer} onTouchStart={hydrate} />\n      <LazyHydrate id=\"search-mobile\" hydrated={hydrated}>\n        <SearchDrawer open={drawerOpen} onClose={closeDrawer}>\n          <SearchForm>\n            <SearchHeader>\n              <SearchField onChange={value => setQuery(value)} value={query} />\n            </SearchHeader>\n            <SearchProvider query={query} active={drawerOpen}>\n              <SearchSuggestions />\n            </SearchProvider>\n          </SearchForm>\n        </SearchDrawer>\n      </LazyHydrate>\n    </>\n  )\n}\n\nexport default memo(SearchMobile)\n"]},"metadata":{},"sourceType":"module"}