"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _useAnalytics2 = _interopRequireDefault(require("./useAnalytics"));

var _analytics = require("./analytics");

var _amp = require("next/amp");

var _FirebaseNavigationTrace = _interopRequireDefault(require("./firebase/FirebaseNavigationTrace"));

var _FirebaseContext = _interopRequireDefault(require("./firebase/FirebaseContext"));

/**
 * Fires a 'pageview' event on mount with provided props as the `eventParams`.
 */
var TrackPageView = function TrackPageView(props) {
  var _useAnalytics = (0, _useAnalytics2["default"])(),
      fire = _useAnalytics.fire;

  var isAmp = (0, _amp.useAmp)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      hydrated = _useState2[0],
      setHydrated = _useState2[1];

  var firebase = (0, _react.useContext)(_FirebaseContext["default"]);

  if (isAmp) {
    (0, _analytics.addAmpTarget)({
      event: 'pageview',
      eventParams: props
    });
    return null;
  }

  (0, _react.useEffect)(function () {
    setTimeout(function () {
      fire('pageview', props);
    });
    setHydrated(true);
  }, []);
  return hydrated && firebase ? _react["default"].createElement(_FirebaseNavigationTrace["default"], null) : null;
};

var _default = TrackPageView;
exports["default"] = _default;
//# sourceMappingURL=TrackPageView.js.map