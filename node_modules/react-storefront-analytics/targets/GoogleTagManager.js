"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _head = _interopRequireDefault(require("next/head"));

var _useAnalytics2 = _interopRequireDefault(require("../useAnalytics"));

var _amp = require("next/amp");

/**
 * @license
 * Copyright Â© 2017-2019 Moov Corporation.  All rights reserved.
 */

/**
 * Component which includes the Google Tag Manager script in document Head.
 *
 * The child of this component is expected to be an object mapping event names
 * to the payload that is to be pushed to the datalayer.
 *
 * Given an example configuration of:
 * ```js
 *  <GoogleTagManager containerId="my-container-id" dataLayerName="dataLayer">
 *   {{
 *     productClicked: ({eventParams, eventContext}) => {
 *       return {
 *         event: 'product-clicked',
 *         productId: eventParams.product.id
 *       }
 *     }
 *   }}
 *  </GoogleTagManager>
 * ```
 *
 * Having set up one or more <Track> components...
 * ```js
 *  <Track event="productClicked" product={{id: 1}}}>
 *   <MyComponent />
 *  </Track>
 * ```
 *
 * ...or when triggering events using `useAnalytics.fire`:
 * ```js
 *   const { fire } = useAnalytics()
 *   return <MyComponent onClick={() => fire('productClicked', {product: {id: 1}})}>
 * ```
 *
 * GoogleTagManager component will listen to `productClicked` events and push to the
 * dataLayer as configured:
 * ```
 *   window[dataLayer].push({event: 'product-clicked', productId: 1})`
 * ```
 *
 * In AMP, if the `ampContainerId` prop has been specified then an <amp-analytics> tag
 * with configuration pointing to the AMP container will be added to the body of the
 * document.
 */
var GoogleTagManager = function GoogleTagManager(_ref) {
  var dataLayerName = _ref.dataLayerName,
      containerId = _ref.containerId,
      ampContainerId = _ref.ampContainerId,
      ampSourceOrigin = _ref.ampSourceOrigin,
      children = _ref.children;

  var _useAnalytics = (0, _useAnalytics2["default"])(),
      events = _useAnalytics.events,
      addAmpAnalyticsTag = _useAnalytics.addAmpAnalyticsTag;

  if ((0, _amp.useAmp)() && ampContainerId) {
    addAmpAnalyticsTag(function () {
      return "<amp-analytics config=\"https://www.googletagmanager.com/amp.json?id=".concat(encodeURIComponent(ampContainerId), "&gtm.url=").concat(encodeURIComponent(ampSourceOrigin), "\" data-credentials=\"include\"></amp-analytics>");
    });
    return null;
  }

  if (!containerId) return null;
  (0, _react.useEffect)(function () {
    setTimeout(function () {
      var handlers = children || {};
      Object.keys(handlers).forEach(function (event) {
        events.on(event, function (eventParams) {
          var eventConfiguration = handlers[event](eventParams);
          window[dataLayerName] = window[dataLayerName] || [];
          window[dataLayerName].push(eventConfiguration);
        });
      });
    });
  }, [dataLayerName, events]);
  return _react["default"].createElement(_head["default"], null, _react["default"].createElement("script", {
    dangerouslySetInnerHTML: {
      __html: "\n          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n          })(window,document,'script','".concat(dataLayerName, "','").concat(containerId, "');\n        ")
    }
  }));
};

GoogleTagManager.defaultProps = {
  ampSourceOrigin: 'SOURCE_URL',
  dataLayerName: 'dataLayer'
};

var _default = (0, _react.memo)(GoogleTagManager);

exports["default"] = _default;
//# sourceMappingURL=GoogleTagManager.js.map