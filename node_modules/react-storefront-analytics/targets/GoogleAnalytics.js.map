{"version":3,"sources":["../../src/targets/GoogleAnalytics.js"],"names":["GoogleAnalytics","globalObjectName","trackingId","useAmpClientId","trace","useBeacon","children","handlers","events","addAmpAnalyticsTag","createAmpTriggers","trackedTargets","targetTriggers","map","event","eventParams","selector","eventContext","hitType","includeInAMP","vars","on","request","filter","Boolean","createAmpConfiguration","account","triggers","configuration","JSON","stringify","setTimeout","window","ga_debug","Object","keys","forEach","eventConfiguration","__html","toString","defaultProps"],"mappings":";;;;;;;;;;;;;AAKA;;AACA;;AACA;;AACA;;AARA;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAOlB;AAAA,MANJC,gBAMI,QANJA,gBAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,QAAQ,GAAGD,QAAQ,IAAI,EAA7B;;AADI,sBAEmC,gCAFnC;AAAA,MAEIE,MAFJ,iBAEIA,MAFJ;AAAA,MAEYC,kBAFZ,iBAEYA,kBAFZ;;AAGJ,MAAI,kBAAJ,EAAc;AACZ,QAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,cAAc,EAAI;AAC1C,UAAMC,cAAc,GAAGD,cAAc,CAACE,GAAf,CAAmB,iBAAsC;AAAA,YAAnCC,KAAmC,SAAnCA,KAAmC;AAAA,YAA5BC,WAA4B,SAA5BA,WAA4B;AAAA,YAAfC,QAAe,SAAfA,QAAe;;AAAA,8BAC5BT,QAAQ,CAACO,KAAD,CAAR,CAAgB;AAChEC,UAAAA,WAAW,EAAXA,WADgE;AAEhEE,UAAAA,YAAY,EAAE;AAFkD,SAAhB,CAD4B;AAAA,YACtEC,OADsE,mBACtEA,OADsE;AAAA,oDAC7DC,YAD6D;AAAA,YAC7DA,YAD6D,sCAC9C,IAD8C;AAAA,YACrCC,IADqC;;AAK9E,YAAID,YAAJ,EAAkB;AAChB,cAAIL,KAAK,KAAK,UAAd,EAA0B;AACxB,mBAAO;AACLO,cAAAA,EAAE,EAAE,SADC;AAELC,cAAAA,OAAO,EAAEJ;AAFJ,aAAP;AAID;;AACD,iBAAO;AACLG,YAAAA,EAAE,EAAE,OADC;AAELC,YAAAA,OAAO,EAAEJ,OAFJ;AAGLE,YAAAA,IAAI,EAAJA,IAHK;AAILJ,YAAAA,QAAQ,EAARA;AAJK,WAAP;AAMD,SAbD,MAaO;AACL,iBAAO,IAAP;AACD;AACF,OArBsB,CAAvB;AAsBA,aAAOJ,cAAc,CAACW,MAAf,CAAsBC,OAAtB,CAAP;AACD,KAxBD;;AAyBA,QAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,QAAwB;AAAA,UAArBd,cAAqB,SAArBA,cAAqB;AACrD,aAAO;AACLS,QAAAA,IAAI,EAAE;AAAEM,UAAAA,OAAO,EAAExB;AAAX,SADD;AAELyB,QAAAA,QAAQ,EAAEjB,iBAAiB,CAACC,cAAD;AAFtB,OAAP;AAID,KALD;;AAMAF,IAAAA,kBAAkB,CAAC,iBAAwB;AAAA,UAArBE,cAAqB,SAArBA,cAAqB;AACzC,UAAMiB,aAAa,GAAGH,sBAAsB,CAAC;AAAEd,QAAAA,cAAc,EAAdA;AAAF,OAAD,CAA5C;AACA,aACE,yFACmCkB,IAAI,CAACC,SAAL,CAAeF,aAAf,CADnC,mCADF;AAKD,KAPiB,CAAlB;AAQA,WAAO,IAAP;AACD;;AAED,wBAAU,YAAM;AACdG,IAAAA,UAAU,CAAC,YAAM;AACf,UAAI3B,KAAJ,EAAW;AACT4B,QAAAA,MAAM,CAACC,QAAP,GAAkB;AAAE7B,UAAAA,KAAK,EAALA;AAAF,SAAlB;AACD;;AACD,UAAIC,SAAJ,EAAe;AACb,YAAI2B,MAAM,CAAC/B,gBAAD,CAAV,EAA8B;AAC5B+B,UAAAA,MAAM,CAAC/B,gBAAD,CAAN,CAAyB,KAAzB,EAAgC,WAAhC,EAA6C,QAA7C;AACD;AACF;;AACDiC,MAAAA,MAAM,CAACC,IAAP,CAAY5B,QAAZ,EAAsB6B,OAAtB,CAA8B,UAAAtB,KAAK,EAAI;AACrCN,QAAAA,MAAM,CAACa,EAAP,CAAUP,KAAV,EAAiB,UAAAC,WAAW,EAAI;AAAA,iCACkBR,QAAQ,CAACO,KAAD,CAAR,CAAgBC,WAAhB,CADlB;AAAA,cACtBI,YADsB,oBACtBA,YADsB;AAAA,cACLkB,kBADK;;AAE9B,cAAIL,MAAM,CAAC/B,gBAAD,CAAV,EAA8B;AAC5B+B,YAAAA,MAAM,CAAC/B,gBAAD,CAAN,CAAyB,MAAzB,EAAiCoC,kBAAjC;AACD;AACF,SALD;AAMD,OAPD;AAQD,KAjBS,CAAV;AAkBD,GAnBD,EAmBG,CAACpC,gBAAD,EAAmBO,MAAnB,EAA2BJ,KAA3B,EAAkCC,SAAlC,CAnBH;AAqBA,SACE,gCAAC,gBAAD,QACE;AAAQ,IAAA,uBAAuB,EAAE;AAC/BiC,MAAAA,MAAM,kXAI2ErC,gBAJ3E,4BAKFA,gBALE,yBAK6BC,UAL7B,0CAKuEC,cAAc,CAACoC,QAAf,EALvE;AADyB;AAAjC,IADF,CADF;AAaD,CAvFD;;AAyFAvC,eAAe,CAACwC,YAAhB,GAA+B;AAC7BvC,EAAAA,gBAAgB,EAAE,IADW;AAE7BE,EAAAA,cAAc,EAAE,IAFa;AAG7BE,EAAAA,SAAS,EAAE;AAHkB,CAA/B;;eAMe,iBAAKL,eAAL,C","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2019 Moov Corporation.  All rights reserved.\n */\n\nimport React, { useEffect, memo } from 'react'\nimport Head from 'next/head'\nimport useAnalytics from '../useAnalytics'\nimport { useAmp } from 'next/amp'\n\n/**\n * Component which includes the Google Analytics script in document Head.\n *\n * The child of this component is expected to be an object mapping event names\n * to the payload that is to be sent when calling the ga() command queue.\n *\n * Given an example configuration of:\n * ```js\n *  <GoogleAnalytics trackingId=\"my-tracking-id\" globalObjectName=\"ga\">\n *   {{\n *     productClicked: ({ eventParams }) => ({\n *      hitType: 'event',\n *      eventCategory: 'interaction',\n *      eventAction: 'click',\n *      eventLabel: eventParams.product.id.toString(),\n *      eventValue: 1\n *     })\n *   }}\n *  </GoogleAnalytics>\n * ```\n *\n * Having set up one or more <Track> components...\n * ```js\n *  <Track event=\"productClicked\" product={{id: 1}}}>\n *   <MyComponent />\n *  </Track>\n * ```\n *\n * ...or when triggering events using `useAnalytics.fire`:\n * ```js\n *   const { fire } = useAnalytics()\n *   return <MyComponent onClick={() => fire('productClicked', {product: {id: 1}})}>\n * ```\n *\n * GoogleAnalytics component will listen to `productClicked` events and call the `ga()`\n * queue with a 'send' command:\n * ```js\n *   window.ga(\n *    'send',\n *    {\n *      eventType: 'event',\n *      eventCategory: 'interaction',\n *      eventAction: 'click',\n *      eventLabel: '1',\n *      eventValue: 1\n *    }\n *   )\n * ```\n *\n * In AMP, the configuration provided as the child is used to construct a set of triggers,\n * in the case of the above example:\n * ```js\n *   [..., {\n *     on: 'click',\n *     request: 'event', // The AMP trigger `request` property is equal to the `hitType` configured\n *     vars: {\n *       eventCategory: 'interaction',\n *       eventAction: 'click',\n *       eventLabel: '1',\n *       eventValue: 1\n *     },\n *     selector: *autogenerated AMP selector identifying the specific MyComponent instance*\n *   }, ...]\n * ```\n * A trigger object is created for each element wrapped in <Track> that has an onClick event.\n * To exclude an event from being triggered in AMP add the `includeInAMP` property as `false`\n * in the event configuration.\n */\nconst GoogleAnalytics = ({\n  globalObjectName,\n  trackingId,\n  useAmpClientId,\n  trace,\n  useBeacon,\n  children,\n}) => {\n  const handlers = children || {}\n  const { events, addAmpAnalyticsTag } = useAnalytics()\n  if (useAmp()) {\n    const createAmpTriggers = trackedTargets => {\n      const targetTriggers = trackedTargets.map(({ event, eventParams, selector }) => {\n        const { hitType, includeInAMP = true, ...vars } = handlers[event]({\n          eventParams,\n          eventContext: {},\n        })\n        if (includeInAMP) {\n          if (event === 'pageview') {\n            return {\n              on: 'visible',\n              request: hitType,\n            }\n          }\n          return {\n            on: 'click',\n            request: hitType,\n            vars,\n            selector,\n          }\n        } else {\n          return null\n        }\n      })\n      return targetTriggers.filter(Boolean)\n    }\n    const createAmpConfiguration = ({ trackedTargets }) => {\n      return {\n        vars: { account: trackingId },\n        triggers: createAmpTriggers(trackedTargets),\n      }\n    }\n    addAmpAnalyticsTag(({ trackedTargets }) => {\n      const configuration = createAmpConfiguration({ trackedTargets })\n      return (\n        `<amp-analytics type=\"googleanalytics\">` +\n        `<script type=\"application/json\">${JSON.stringify(configuration)}</script>` +\n        `</amp-analytics>`\n      )\n    })\n    return null\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (trace) {\n        window.ga_debug = { trace }\n      }\n      if (useBeacon) {\n        if (window[globalObjectName]) {\n          window[globalObjectName]('set', 'transport', 'beacon')\n        }\n      }\n      Object.keys(handlers).forEach(event => {\n        events.on(event, eventParams => {\n          const { includeInAMP, ...eventConfiguration } = handlers[event](eventParams)\n          if (window[globalObjectName]) {\n            window[globalObjectName]('send', eventConfiguration)\n          }\n        })\n      })\n    })\n  }, [globalObjectName, events, trace, useBeacon])\n\n  return (\n    <Head>\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n          })(window,document,'script','https://www.google-analytics.com/analytics.js','${globalObjectName}');\n          ${globalObjectName}('create', '${trackingId}', 'auto', { useAmpClientId: ${useAmpClientId.toString()} });\n        `\n      }} />\n    </Head>\n  )\n}\n\nGoogleAnalytics.defaultProps = {\n  globalObjectName: 'ga',\n  useAmpClientId: true,\n  useBeacon: true,\n}\n\nexport default memo(GoogleAnalytics)\n"],"file":"GoogleAnalytics.js"}