{"version":3,"sources":["../../src/targets/GoogleTagManager.js"],"names":["GoogleTagManager","dataLayerName","containerId","ampContainerId","ampSourceOrigin","children","events","addAmpAnalyticsTag","encodeURIComponent","setTimeout","handlers","Object","keys","forEach","event","on","eventParams","eventConfiguration","window","push","__html","defaultProps"],"mappings":";;;;;;;;;;;AAKA;;AACA;;AACA;;AACA;;AARA;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAMnB;AAAA,MALJC,aAKI,QALJA,aAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,sBACmC,gCADnC;AAAA,MACIC,MADJ,iBACIA,MADJ;AAAA,MACYC,kBADZ,iBACYA,kBADZ;;AAGJ,MAAI,sBAAYJ,cAAhB,EAAgC;AAC9BI,IAAAA,kBAAkB,CAAC,YAAM;AACvB,4FAA8EC,kBAAkB,CAC9FL,cAD8F,CAAhG,sBAEaK,kBAAkB,CAC7BJ,eAD6B,CAF/B;AAKD,KANiB,CAAlB;AAOA,WAAO,IAAP;AACD;;AAED,MAAI,CAACF,WAAL,EAAkB,OAAO,IAAP;AAElB,wBAAU,YAAM;AACdO,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,QAAQ,GAAGL,QAAQ,IAAI,EAA7B;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAAAC,KAAK,EAAI;AACrCR,QAAAA,MAAM,CAACS,EAAP,CAAUD,KAAV,EAAiB,UAAAE,WAAW,EAAI;AAC9B,cAAMC,kBAAkB,GAAGP,QAAQ,CAACI,KAAD,CAAR,CAAgBE,WAAhB,CAA3B;AACAE,UAAAA,MAAM,CAACjB,aAAD,CAAN,GAAwBiB,MAAM,CAACjB,aAAD,CAAN,IAAyB,EAAjD;AACAiB,UAAAA,MAAM,CAACjB,aAAD,CAAN,CAAsBkB,IAAtB,CAA2BF,kBAA3B;AACD,SAJD;AAKD,OAND;AAOD,KATS,CAAV;AAUD,GAXD,EAWG,CAAChB,aAAD,EAAgBK,MAAhB,CAXH;AAaA,SACE,gCAAC,gBAAD,QACE;AAAQ,IAAA,uBAAuB,EAAE;AAC/Bc,MAAAA,MAAM,+XAK2BnB,aAL3B,gBAK8CC,WAL9C;AADyB;AAAjC,IADF,CADF;AAaD,CAhDD;;AAkDAF,gBAAgB,CAACqB,YAAjB,GAAgC;AAC9BjB,EAAAA,eAAe,EAAE,YADa;AAE9BH,EAAAA,aAAa,EAAE;AAFe,CAAhC;;eAKe,iBAAKD,gBAAL,C","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2019 Moov Corporation.  All rights reserved.\n */\n\nimport React, { useEffect, memo } from 'react'\nimport Head from 'next/head'\nimport useAnalytics from '../useAnalytics'\nimport { useAmp } from 'next/amp'\n\n/**\n * Component which includes the Google Tag Manager script in document Head.\n *\n * The child of this component is expected to be an object mapping event names\n * to the payload that is to be pushed to the datalayer.\n *\n * Given an example configuration of:\n * ```js\n *  <GoogleTagManager containerId=\"my-container-id\" dataLayerName=\"dataLayer\">\n *   {{\n *     productClicked: ({eventParams, eventContext}) => {\n *       return {\n *         event: 'product-clicked',\n *         productId: eventParams.product.id\n *       }\n *     }\n *   }}\n *  </GoogleTagManager>\n * ```\n *\n * Having set up one or more <Track> components...\n * ```js\n *  <Track event=\"productClicked\" product={{id: 1}}}>\n *   <MyComponent />\n *  </Track>\n * ```\n *\n * ...or when triggering events using `useAnalytics.fire`:\n * ```js\n *   const { fire } = useAnalytics()\n *   return <MyComponent onClick={() => fire('productClicked', {product: {id: 1}})}>\n * ```\n *\n * GoogleTagManager component will listen to `productClicked` events and push to the\n * dataLayer as configured:\n * ```\n *   window[dataLayer].push({event: 'product-clicked', productId: 1})`\n * ```\n *\n * In AMP, if the `ampContainerId` prop has been specified then an <amp-analytics> tag\n * with configuration pointing to the AMP container will be added to the body of the\n * document.\n */\nconst GoogleTagManager = ({\n  dataLayerName,\n  containerId,\n  ampContainerId,\n  ampSourceOrigin,\n  children,\n}) => {\n  const { events, addAmpAnalyticsTag } = useAnalytics()\n\n  if (useAmp() && ampContainerId) {\n    addAmpAnalyticsTag(() => {\n      return `<amp-analytics config=\"https://www.googletagmanager.com/amp.json?id=${encodeURIComponent(\n        ampContainerId,\n      )}&gtm.url=${encodeURIComponent(\n        ampSourceOrigin,\n      )}\" data-credentials=\"include\"></amp-analytics>`\n    })\n    return null\n  }\n\n  if (!containerId) return null\n\n  useEffect(() => {\n    setTimeout(() => {\n      const handlers = children || {}\n      Object.keys(handlers).forEach(event => {\n        events.on(event, eventParams => {\n          const eventConfiguration = handlers[event](eventParams)\n          window[dataLayerName] = window[dataLayerName] || []\n          window[dataLayerName].push(eventConfiguration)\n        })\n      })\n    })\n  }, [dataLayerName, events])\n\n  return (\n    <Head>\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n          })(window,document,'script','${dataLayerName}','${containerId}');\n        `\n      }} />\n    </Head>\n  )\n}\n\nGoogleTagManager.defaultProps = {\n  ampSourceOrigin: 'SOURCE_URL',\n  dataLayerName: 'dataLayer',\n}\n\nexport default memo(GoogleTagManager)\n"],"file":"GoogleTagManager.js"}