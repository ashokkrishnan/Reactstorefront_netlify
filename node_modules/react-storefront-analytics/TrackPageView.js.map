{"version":3,"sources":["../src/TrackPageView.js"],"names":["TrackPageView","props","fire","isAmp","hydrated","setHydrated","firebase","FirebaseContext","event","eventParams","setTimeout"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;AAGA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,sBACZ,gCADY;AAAA,MACrBC,IADqB,iBACrBA,IADqB;;AAE7B,MAAMC,KAAK,GAAG,kBAAd;;AAF6B,kBAGG,qBAAS,KAAT,CAHH;AAAA;AAAA,MAGtBC,QAHsB;AAAA,MAGZC,WAHY;;AAI7B,MAAMC,QAAQ,GAAG,uBAAWC,2BAAX,CAAjB;;AAEA,MAAIJ,KAAJ,EAAW;AACT,iCAAa;AAAEK,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,WAAW,EAAER;AAAlC,KAAb;AACA,WAAO,IAAP;AACD;;AAED,wBAAU,YAAM;AACdS,IAAAA,UAAU,CAAC,YAAM;AACfR,MAAAA,IAAI,CAAC,UAAD,EAAaD,KAAb,CAAJ;AACD,KAFS,CAAV;AAGAI,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GALD,EAKG,EALH;AAOA,SAAOD,QAAQ,IAAIE,QAAZ,GAAuB,gCAAC,mCAAD,OAAvB,GAAqD,IAA5D;AACD,CAnBD;;eAqBeN,a","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport useAnalytics from './useAnalytics'\nimport { addAmpTarget } from './analytics'\nimport { useAmp } from 'next/amp'\nimport FirebaseNavigationTrace from './firebase/FirebaseNavigationTrace'\nimport FirebaseContext from './firebase/FirebaseContext'\n\n/**\n * Fires a 'pageview' event on mount with provided props as the `eventParams`.\n */\nconst TrackPageView = props => {\n  const { fire } = useAnalytics()\n  const isAmp = useAmp()\n  const [hydrated, setHydrated] = useState(false)\n  const firebase = useContext(FirebaseContext)\n\n  if (isAmp) {\n    addAmpTarget({ event: 'pageview', eventParams: props })\n    return null\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      fire('pageview', props)\n    })\n    setHydrated(true)\n  }, [])\n\n  return hydrated && firebase ? <FirebaseNavigationTrace /> : null\n}\n\nexport default TrackPageView\n"],"file":"TrackPageView.js"}