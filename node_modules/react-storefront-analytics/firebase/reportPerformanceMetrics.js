"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = reportPeformanceMetrics;

var _webVitals = require("web-vitals");

/**
 * Reports the following to Firebase:
 *
 *  TTFB
 *  CLS
 *  FCP
 *  LCP
 *  FID
 *  All Server-Timing header values
 *
 * @param {Object} firebasePerf The firebase peformance object
 */
function reportPeformanceMetrics(firebasePerf) {
  /* istanbul ignore else */
  if (typeof window.performance !== 'undefined') {
    try {
      var reportMetric = function reportMetric(name, value) {
        var trace = firebasePerf.trace(name);
        trace.start();
        trace.putMetric(name, value);
        trace.stop();
      }; // Server-Timing header


      var performance = window.performance;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = performance.getEntriesByType('navigation')[0].serverTiming[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var metric = _step.value;
          reportMetric(metric.name, metric.duration);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var metrics = [_webVitals.getCLS, _webVitals.getFID, _webVitals.getLCP, _webVitals.getTTFB, _webVitals.getFCP];
      metrics.forEach(function (getMetric) {
        getMetric(function (metric) {
          return reportMetric(metric.name, metric.value);
        }, true
        /* report each measurement, not just the first */
        );
      });
    } catch (e) {
      console.warn('Could not get performance metrics', e);
    }
  }
}
//# sourceMappingURL=reportPerformanceMetrics.js.map