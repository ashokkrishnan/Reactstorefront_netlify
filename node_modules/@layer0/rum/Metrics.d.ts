import Router from './Router';
export interface MetricsOptions {
    /**
     * Your Layer0 RUM site token,
     */
    token?: string;
    /**
     * A custom label to use for the current page
     */
    pageLabel?: string;
    /**
     * The current version of your app
     */
    appVersion?: string;
    /**
     * When running a split test, use this field to specify which variant is active
     */
    splitTestVariant?: string;
    /**
     * The country in which the user is located
     */
    country?: string;
    /**
     * True if the response was served from the CDN cache, false if it was not, and null if not applicable
     */
    cacheHit?: boolean;
    /**
     * A router to map URL paths to page labels. Use this to defined page labels app-wide with
     * a single Metrics instance.
     */
    router?: Router;
    /**
     * The URL to which to report metrics
     */
    sendTo?: string;
    /**
     * Set to true to output all measurements to the console
     */
    debug?: boolean;
}
interface MetricsConstructor {
    new (options: MetricsOptions): Metrics;
}
interface Metrics {
    /**
     * Collects all metrics and reports them to Layer0 RUM.
     */
    collect(): Promise<void>;
}
declare var Metrics: MetricsConstructor;
declare let MetricsType: typeof Metrics;
export default MetricsType;
