{"version":3,"sources":["../src/Video.js"],"names":["styles","theme","root","height","width","overflow","useStyles","name","Video","children","classes","props","amp","Tag","tagProps","layout","propTypes","controls","PropTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAcO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,KAAK,EAAE,MAFH;AAGJC,MAAAA,QAAQ,EAAE;AAHN;AADwB,GAAL;AAAA,CAApB;;;AAQP,IAAMC,SAAS,GAAG,wBAAWN,MAAX,EAAmB;AAAEO,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;;AAEe,SAASC,KAAT,OAAgD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAATC,KAAS;AAC7DD,EAAAA,OAAO,GAAGJ,SAAS,CAAC;AAAEI,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;AAEA,MAAME,GAAG,GAAG,kBAAZ;AACA,MAAMC,GAAG,GAAGD,GAAG,GAAG,WAAH,GAAiB,OAAhC;;AAEA,MAAME,QAAQ,sDACXF,GAAG,GAAG,OAAH,GAAa,WADL,EACmBF,OAAO,CAACR,IAD3B,GAETS,KAFS,CAAd,CAN6D,CAW7D;;;AACA,MAAIC,GAAG,IAAI,CAACD,KAAK,CAACR,MAAd,IAAwB,CAACQ,KAAK,CAACP,KAA/B,IAAwC,CAACO,KAAK,CAACI,MAAnD,EAA2D;AACzDD,IAAAA,QAAQ,CAACC,MAAT,GAAkB,MAAlB;AACD;;AAED,SACE,kEACGH,GAAG,IACF,gCAAC,gBAAD,QACE;AACE,IAAA,KAAK,MADP;AAEE,sBAAe,WAFjB;AAGE,IAAA,GAAG,EAAC;AAHN,IADF,CAFJ,EAUE,gCAAC,GAAD,EAASE,QAAT,EAAoBL,QAApB,CAVF,CADF;AAcD;;AAEDD,KAAK,CAACQ,SAAN,GAAkB;AAChB;;;AAGAC,EAAAA,QAAQ,EAAEC,sBAAUC;AAJJ,CAAlB;AAOAX,KAAK,CAACY,YAAN,GAAqB;AACnBH,EAAAA,QAAQ,EAAE;AADS,CAArB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Head from 'next/head'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useAmp } from 'next/amp'\n\n/**\n * AMP ready video component. All props are spread to the underlying video or amp-video tag.\n *\n * Usage:\n *\n * ```js\n * <Video\n *  src=\"https://amp.dev/static/inline-examples/videos/kitten-playing.webm\"\n *  controls\n * />\n * ```\n */\nexport const styles = theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFVideo' })\n\nexport default function Video({ children, classes, ...props }) {\n  classes = useStyles({ classes })\n\n  const amp = useAmp()\n  const Tag = amp ? 'amp-video' : 'video'\n\n  const tagProps = {\n    [amp ? 'class' : 'className']: classes.root,\n    ...props,\n  }\n\n  // Layout must be declared in AMP, so we use \"fill\" by default if not defined\n  if (amp && !props.height && !props.width && !props.layout) {\n    tagProps.layout = 'fill'\n  }\n\n  return (\n    <>\n      {amp && (\n        <Head>\n          <script\n            async\n            custom-element=\"amp-video\"\n            src=\"https://cdn.ampproject.org/v0/amp-video-0.1.js\"\n          />\n        </Head>\n      )}\n      <Tag {...tagProps}>{children}</Tag>\n    </>\n  )\n}\n\nVideo.propTypes = {\n  /**\n   * Set to false to hide the browser video controls\n   */\n  controls: PropTypes.bool,\n}\n\nVideo.defaultProps = {\n  controls: true,\n}\n"],"file":"Video.js"}