{"version":3,"sources":["../src/AmpQuantitySelector.js"],"names":["AmpQuantitySelector","amp","props","isAmp","on","createHandler","setState","value","minValue","getValue","maxValue","bind","attribute","propTypes","QuantitySelector","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAIA,SAASA,mBAAT,OAAgD;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,MAATC,KAAS;AAC9C,MAAMC,KAAK,GAAG,kBAAd;AAEA,SACE,gCAAC,4BAAD,gCACMD,KADN,uCAESC,KAAK,GAAG,UAAH,GAAgB,UAF9B,EAE2C,IAF3C;AAGE,IAAA,mBAAmB,EAAEF,GAAG,CAACG,EAAJ,CACnBH,GAAG,CAACI,aAAJ,CACE,KADF,EAEEJ,GAAG,CAACK,QAAJ,CAAa;AACXC,MAAAA,KAAK,gBAASL,KAAK,CAACM,QAAf,gBAA6BP,GAAG,CAACQ,QAAJ,EAA7B,iBAAkDP,KAAK,CAACK,KAAxD;AADM,KAAb,CAFF,CADmB,CAHvB;AAWE,IAAA,cAAc,EAAEN,GAAG,CAACG,EAAJ,CACdH,GAAG,CAACI,aAAJ,CACE,KADF,EAEEJ,GAAG,CAACK,QAAJ,CAAa;AACXC,MAAAA,KAAK,gBAASL,KAAK,CAACQ,QAAf,gBAA6BT,GAAG,CAACQ,QAAJ,EAA7B,iBAAkDP,KAAK,CAACK,KAAxD;AADM,KAAb,CAFF,CADc,CAXlB;AAmBE,IAAA,UAAU,EAAEN,GAAG,CAACU,IAAJ,CAAS;AACnBC,MAAAA,SAAS,EAAE,OADQ;AAEnBL,MAAAA,KAAK,YAAKN,GAAG,CAACQ,QAAJ,EAAL;AAFc,KAAT;AAnBd,KADF;AA0BD;;AAEDT,mBAAmB,CAACa,SAApB,GAAgCC,6BAAiBD,SAAjD;AACAb,mBAAmB,CAACe,YAApB,GAAmCD,6BAAiBC,YAApD;;eAEe,iCAAgBf,mBAAhB,C","sourcesContent":["import React from 'react'\nimport QuantitySelector from 'react-storefront/QuantitySelector'\nimport { useAmp } from 'next/amp'\nimport withDataBinding from './bind/withDataBinding'\n\n/**\n * An AMP-compatible version of `react-storefront/QuantitySelector`.  All props are\n * forwarded to the underlying `QuantitySelector` element.\n */\nfunction AmpQuantitySelector({ amp, ...props }) {\n  const isAmp = useAmp()\n\n  return (\n    <QuantitySelector\n      {...props}\n      {...{ [isAmp ? 'readOnly' : 'disabled']: true }}\n      subtractButtonProps={amp.on(\n        amp.createHandler(\n          'tap',\n          amp.setState({\n            value: `max(${props.minValue}, (${amp.getValue()} || ${props.value}) - 1)`,\n          }),\n        ),\n      )}\n      addButtonProps={amp.on(\n        amp.createHandler(\n          'tap',\n          amp.setState({\n            value: `min(${props.maxValue}, (${amp.getValue()} || ${props.value}) + 1)`,\n          }),\n        ),\n      )}\n      inputProps={amp.bind({\n        attribute: 'value',\n        value: `${amp.getValue()} || 1`,\n      })}\n    />\n  )\n}\n\nAmpQuantitySelector.propTypes = QuantitySelector.propTypes\nAmpQuantitySelector.defaultProps = QuantitySelector.defaultProps\n\nexport default withDataBinding(AmpQuantitySelector)\n"],"file":"AmpQuantitySelector.js"}