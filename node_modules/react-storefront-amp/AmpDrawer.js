"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = AmpDrawer;
exports.styles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Paper = _interopRequireDefault(require("@material-ui/core/Paper"));

var _head = _interopRequireDefault(require("next/head"));

var _styles = require("@material-ui/core/styles");

var _clsx3 = _interopRequireDefault(require("clsx"));

var _DrawerCloseButton = _interopRequireDefault(require("react-storefront/drawer/DrawerCloseButton"));

var _DataBindingContext = _interopRequireDefault(require("./bind/DataBindingContext"));

var _Drawer = _interopRequireDefault(require("react-storefront/drawer/Drawer"));

var _amp = require("next/amp");

var animationByAnchor = {
  top: 'fly-in-top',
  bottom: 'fly-in-bottom'
};

var styles = function styles(theme) {
  return {
    paper: {},
    closeButton: {},
    backdrop: {
      top: '0',
      left: '0',
      right: '0',
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      bottom: '0',
      position: 'fixed',
      display: 'block',
      zIndex: theme.zIndex.amp.modal + 1
    },
    fullscreen: {
      height: '100vh',
      width: '100vw'
    },
    hidden: {
      display: 'none'
    },
    lightbox: {
      zIndex: theme.zIndex.amp.modal + 2
    },
    container: {
      width: '100%',
      height: '100%',
      boxSizing: 'border-box',
      flexWrap: 'nowrap',
      display: 'flex',
      flexDirection: 'column',
      position: 'relative',
      boxShadow: '0px 8px 10px -5px rgba(0,0,0,0.2), 0px 16px 24px 2px rgba(0,0,0,0.14), 0px 6px 30px 5px rgba(0,0,0,0.12)'
    },
    anchorLeft: {
      left: 0
    },
    anchorRight: {
      right: 0
    },
    sidebar: {
      backgroundColor: 'white',
      boxShadow: '0px 8px 10px -5px rgba(0,0,0,0.2), 0px 16px 24px 2px rgba(0,0,0,0.14), 0px 6px 30px 5px rgba(0,0,0,0.12)',
      '& ~ div[class*="amphtml-sidebar-mask"]': {
        display: 'none'
      }
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFAmpDrawer'
});

function AmpDrawer(props) {
  if (!(0, _amp.useAmp)()) return _react["default"].createElement(_Drawer["default"], props);
  var classes = props.classes,
      children = props.children,
      anchor = props.anchor,
      _props$showCloseButto = props.showCloseButton,
      showCloseButton = _props$showCloseButto === void 0 ? anchor === 'bottom' : _props$showCloseButto,
      fullscreen = props.fullscreen;
  classes = useStyles({
    classes: classes
  });

  var _useContext = (0, _react.useContext)(_DataBindingContext["default"]),
      ampState = _useContext.ampState;

  if (anchor === 'left' || anchor === 'right') {
    var _clsx;

    return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_head["default"], null, _react["default"].createElement("script", {
      async: true,
      "custom-element": "amp-sidebar",
      src: "https://cdn.ampproject.org/v0/amp-sidebar-0.1.js"
    })), _react["default"].createElement("div", {
      className: classes.hidden,
      role: "button",
      tabIndex: 0,
      on: "tap:".concat(ampState, ".close"),
      "amp-bind": "class->".concat(ampState, ".open ? \"").concat((0, _clsx3["default"])(classes.backdrop), "\" : \"").concat(classes.hidden, "\"")
    }, _react["default"].createElement("amp-sidebar", {
      "class": (0, _clsx3["default"])((_clsx = {}, (0, _defineProperty2["default"])(_clsx, classes.sidebar, true), (0, _defineProperty2["default"])(_clsx, classes.anchorLeft, anchor === 'left'), (0, _defineProperty2["default"])(_clsx, classes.anchorRight, anchor === 'right'), _clsx)),
      id: ampState,
      layout: "nodisplay",
      side: anchor,
      on: "sidebarClose:AMP.setState({ ".concat(ampState, ": { open: false } })")
    }, children)));
  } else {
    var _clsx2;

    return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_head["default"], null, _react["default"].createElement("script", {
      async: true,
      "custom-element": "amp-lightbox",
      src: "https://cdn.ampproject.org/v0/amp-lightbox-0.1.js"
    })), _react["default"].createElement("div", {
      className: classes.hidden,
      on: "tap:AMP.setState({ ".concat(ampState, ": { open: false }})"),
      "amp-bind": "class->".concat(ampState, ".open ? \"").concat((0, _clsx3["default"])(classes.backdrop), "\" : \"").concat(classes.hidden, "\"")
    }, _react["default"].createElement("amp-lightbox", {
      "class": (0, _clsx3["default"])((_clsx2 = {}, (0, _defineProperty2["default"])(_clsx2, classes.lightbox, true), (0, _defineProperty2["default"])(_clsx2, classes.fullscreen, fullscreen), _clsx2)),
      "animate-in": animationByAnchor[anchor],
      layout: "nodisplay",
      "amp-bind": "open->".concat(ampState, ".open")
    }, _react["default"].createElement(_Paper["default"], {
      className: classes.container,
      square: true,
      tabIndex: 0,
      role: "button",
      on: "tap:AMP.setState({ ".concat(ampState, ": { open: true }})")
    }, showCloseButton && _react["default"].createElement(_DrawerCloseButton["default"], {
      className: classes.closeButton,
      ampState: ampState,
      fullscreen: fullscreen
    }), children))));
  }
}

AmpDrawer.propTypes = {};
AmpDrawer.defaultProps = {
  anchor: 'bottom'
};
//# sourceMappingURL=AmpDrawer.js.map