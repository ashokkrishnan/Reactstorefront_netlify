{"version":3,"sources":["../../src/option/AmpProductOption.js"],"names":["AmpProductOption","amp","bind","props","value","selected","selectedClassName","className","attribute","getValue","index","buttonProps","on","createHandler","setState","prop"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,SAASA,gBAAT,OAAmD;AAAA,MAAvBC,GAAuB,QAAvBA,GAAuB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAATC,KAAS;AACjD,SACE,gCAAC,yBAAD,gCACMA,KADN;AAEE,IAAA,YAAY,EAAE;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAUC,QAAV,SAAUA,QAAV;AAAA,UAAoBC,iBAApB,SAAoBA,iBAApB;AAAA;AACZC,QAAAA,SAAS,EAAEF,QAAQ,GAAGC,iBAAH,GAAuB;AAD9B,SAETL,GAAG,CAACC,IAAJ,CAAS;AACVM,QAAAA,SAAS,EAAE,OADD;AAEVJ,QAAAA,KAAK,YAAKH,GAAG,CAACQ,QAAJ,CAAa,gBAAb,CAAL,qBAA8C,qBACjDL,KADiD,EAEjD,IAFiD,CAA9C,kBAGIE,iBAHJ;AAFK,OAAT,CAFS;AAAA,KAFhB;AAYE,IAAA,WAAW,EAAE;AAAA,UAAGF,KAAH,SAAGA,KAAH;AAAA,UAAUM,KAAV,SAAUA,KAAV;AAAA,aAAuB;AAClCC,QAAAA,WAAW,EAAEV,GAAG,CAACW,EAAJ,CACXX,GAAG,CAACY,aAAJ,CACE,KADF,EAEEZ,GAAG,CAACa,QAAJ,CAAa;AACXC,UAAAA,IAAI,EAAE,gBADK;AAEXX,UAAAA,KAAK,YAAKH,GAAG,CAACQ,QAAJ,CAAa,gBAAb,CAAL,qBAA8C,qBACjDL,KADiD,EAEjD,IAFiD,CAA9C,6BAGeH,GAAG,CAACQ,QAAJ,CAAa,SAAb,CAHf,cAG0CC,KAH1C;AAFM,SAAb,CAFF,CADW;AADqB,OAAvB;AAAA;AAZf,KADF;AA6BD;;eAEc,iCAAgBV,gBAAhB,C","sourcesContent":["import React from 'react'\nimport ProductOption from 'react-storefront/option/ProductOption'\nimport withDataBinding from '../bind/withDataBinding'\nimport get from 'lodash/get'\n\nfunction AmpProductOption({ amp, bind, ...props }) {\n  return (\n    <ProductOption\n      {...props}\n      wrapperProps={({ value, selected, selectedClassName }) => ({\n        className: selected ? selectedClassName : '',\n        ...amp.bind({\n          attribute: 'class',\n          value: `${amp.getValue('selectedOption')}.id == '${get(\n            value,\n            'id',\n          )}' ? '${selectedClassName}' : ''`,\n        }),\n      })}\n      optionProps={({ value, index }) => ({\n        buttonProps: amp.on(\n          amp.createHandler(\n            'tap',\n            amp.setState({\n              prop: 'selectedOption',\n              value: `${amp.getValue('selectedOption')}.id == '${get(\n                value,\n                'id',\n              )}' ? undefined : ${amp.getValue('options')}[${index}]`,\n            }),\n          ),\n        ),\n      })}\n    />\n  )\n}\n\nexport default withDataBinding(AmpProductOption)\n"],"file":"AmpProductOption.js"}