{"version":3,"sources":["../src/AmpExpandableSection.js"],"names":["styles","theme","root","boxShadow","borderBottom","palette","divider","background","summary","backgroundColor","padding","spacing","borderStyle","outlineWidth","toggle","position","right","top","expand","display","collapse","details","margins","summaryExpanded","expandIconExpanded","useStyles","name","AmpExpandableSection","props","classes","expanded","children","title","ExpandIcon","CollapseIcon","fromAccordion","defaultExpanded","ExpandMore","ExpandLess","sectionAttributes","section","propTypes","PropTypes","oneOfType","string","element","bool","any","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport AmpAccordion from './AmpAccordion'\nimport { useAmp } from 'next/amp'\nimport ExpandableSection from 'react-storefront/ExpandableSection'\n\nexport const styles = theme => ({\n  root: {\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    background: 'transparent',\n  },\n  summary: {\n    backgroundColor: 'transparent',\n    padding: `12px ${theme.spacing(2)}px`,\n    borderStyle: 'none',\n    outlineWidth: 0,\n  },\n  toggle: {\n    position: 'absolute',\n    right: '18px',\n    top: '13px',\n  },\n  expand: {\n    display: 'block',\n    'section[expanded] &': {\n      display: 'none',\n    },\n  },\n  collapse: {\n    display: 'none',\n    'section[expanded] &': {\n      display: 'block',\n    },\n  },\n  details: {\n    backgroundColor: 'transparent',\n    padding: theme.spacing(0, 0, 2, 0),\n  },\n  margins: {},\n\n  // These are intentionally left blank - react-storefront provides this on Expandable\n  // section, so we must as well to avoid warnings\n  summaryExpanded: {},\n  expandIconExpanded: {},\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFAmpExpandableSection' })\n\n/**\n * An AMP-compatible expandable section based on amp-accordion.\n */\nexport default function AmpExpandableSection(props) {\n  if (!useAmp()) {\n    return <ExpandableSection {...props} />\n  }\n\n  let {\n    classes,\n    expanded,\n    children = [],\n    title,\n    ExpandIcon,\n    CollapseIcon,\n    fromAccordion,\n    defaultExpanded,\n  } = props\n\n  classes = useStyles({ classes })\n\n  if (ExpandIcon === ExpandMore) {\n    CollapseIcon = ExpandLess\n  }\n\n  const sectionAttributes = {}\n\n  if (expanded || defaultExpanded) sectionAttributes.expanded = ''\n\n  const section = (\n    <section {...sectionAttributes} className={clsx(classes.root, classes.margins)}>\n      <Typography variant=\"subtitle1\" component=\"h3\" className={classes.summary}>\n        {title}\n        <ExpandIcon className={clsx(classes.toggle, classes.expand)} />\n        <CollapseIcon className={clsx(classes.toggle, classes.collapse)} />\n      </Typography>\n      <div className={classes.details}>{children}</div>\n    </section>\n  )\n\n  if (fromAccordion) {\n    return section\n  } else {\n    return <AmpAccordion>{section}</AmpAccordion>\n  }\n}\n\nAmpExpandableSection.propTypes = {\n  /**\n   * The title for the header of the expandable section\n   */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * Set to true to expand the panel\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Set to true to expand the panel\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * The icon to use for collapsed groups\n   */\n  ExpandIcon: PropTypes.any,\n\n  /**\n   * The icon to use for expanded groups\n   */\n  CollapseIcon: PropTypes.any,\n\n  /**\n   * Identifier if component is a child of Accordion\n   */\n  fromAccordion: PropTypes.bool,\n}\n\nAmpExpandableSection.defaultProps = {\n  ExpandIcon: ExpandMore,\n  CollapseIcon: ExpandMore,\n}\n"],"file":"AmpExpandableSection.js"}