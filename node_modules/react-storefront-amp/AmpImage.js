"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOptimizedSrc = getOptimizedSrc;
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _Image = _interopRequireDefault(require("react-storefront/Image"));

var _amp = require("next/amp");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _withDataBinding = _interopRequireDefault(require("./bind/withDataBinding"));

var _qs = _interopRequireDefault(require("qs"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function AmpImage(_ref) {
  var src = _ref.src,
      optimize = _ref.optimize,
      amp = _ref.amp,
      bind = _ref.bind,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["src", "optimize", "amp", "bind"]);
  var isAmp = (0, _amp.useAmp)();
  var layout;
  if (src == null) return null;

  if (isAmp) {
    layout = props.contain || props.fill || props.aspectRatio ? 'fill' : 'intrinsic';
  }

  var additionalProps = !isAmp ? {} : _objectSpread({}, amp.bind({
    attribute: 'src',
    value: "'".concat(getOptimizedSrc(isAmp, '__url__'), "'.split('__url__').join(encodeURIComponent(").concat(amp.getValue('src'), "))")
  }), {
    lazy: false,
    layout: layout
  });
  return _react["default"].createElement(_Image["default"], (0, _extends2["default"])({}, props, additionalProps, {
    src: getOptimizedSrc(isAmp, src, optimize),
    ImgElement: isAmp ? AmpImg : 'img'
  }));
}

function AmpImg(_ref2) {
  var className = _ref2.className,
      onError = _ref2.onError,
      props = (0, _objectWithoutProperties2["default"])(_ref2, ["className", "onError"]);
  return _react["default"].createElement("amp-img", (0, _extends2["default"])({
    "class": className
  }, props));
}

AmpImage.propTypes = _objectSpread({}, _Image["default"].propTypes, {
  /**
   * When specified, the image will be optimized for mobile devices by the Moovweb CDN.  Accepts the following keys:
   *
   * - quality  - (optional) A number or string containing the number for the desired quality, on a scale from 1 (worst) to 100 (best)
   * - width - (optional) A number or string containing the number for the desired pixel width on phones. You only need to specify "height" or "width".  The original aspect ratio of the image is preserved.
   * - height - (optional) A number or string containing the number for the desired pixel height. You only need to specify "height" or "width".  The original aspect ratio of the image is preserved.
   * - format - (optional, defaults to webp) A string containing the desired file format. Accepts "webp" or "jpeg".  If webp is specified but the user's browser doesn not support webp, jpeg will be used.
   */
  optimize: _propTypes["default"].shape({
    quality: _propTypes["default"].number,
    width: _propTypes["default"].number,
    height: _propTypes["default"].number,
    format: _propTypes["default"].oneOf(['webp', 'jpeg'])
  })
});
AmpImage.defaultProps = _objectSpread({}, _Image["default"].defaultProps, {
  optimize: null
});

var _default = (0, _withDataBinding["default"])(AmpImage);
/**
 * Returns a URL for Moovweb's image optimizer for the given src URL and optimization
 * options
 * @param {Boolean} amp Set to true when rendering amp
 * @param {String} url The source image url
 * @param {Object} options See the prop types for AmpImage
 * @return {String}
 */


exports["default"] = _default;

function getOptimizedSrc(amp, url, options) {
  if (!options || (0, _typeof2["default"])(options) !== 'object') {
    return url;
  }

  url = "https://opt.moovweb.net/?".concat(_qs["default"].stringify(_objectSpread({}, options, {
    img: url
  }))); // this allows use to generate optimized URLs using moustache templates, as in the case of `AmpSearchSuggestions`

  if (amp) url = url.replace(encodeURIComponent('{{'), '{{').replace(encodeURIComponent('}}'), '}}');
  return url;
}
//# sourceMappingURL=AmpImage.js.map