"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _QuantitySelector = _interopRequireDefault(require("react-storefront/QuantitySelector"));

var _amp = require("next/amp");

var _withDataBinding = _interopRequireDefault(require("./bind/withDataBinding"));

/**
 * An AMP-compatible version of `react-storefront/QuantitySelector`.  All props are
 * forwarded to the underlying `QuantitySelector` element.
 */
function AmpQuantitySelector(_ref) {
  var amp = _ref.amp,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["amp"]);
  var isAmp = (0, _amp.useAmp)();
  return _react["default"].createElement(_QuantitySelector["default"], (0, _extends2["default"])({}, props, (0, _defineProperty2["default"])({}, isAmp ? 'readOnly' : 'disabled', true), {
    subtractButtonProps: amp.on(amp.createHandler('tap', amp.setState({
      value: "max(".concat(props.minValue, ", (").concat(amp.getValue(), " || ").concat(props.value, ") - 1)")
    }))),
    addButtonProps: amp.on(amp.createHandler('tap', amp.setState({
      value: "min(".concat(props.maxValue, ", (").concat(amp.getValue(), " || ").concat(props.value, ") + 1)")
    }))),
    inputProps: amp.bind({
      attribute: 'value',
      value: "".concat(amp.getValue(), " || 1")
    })
  }));
}

AmpQuantitySelector.propTypes = _QuantitySelector["default"].propTypes;
AmpQuantitySelector.defaultProps = _QuantitySelector["default"].defaultProps;

var _default = (0, _withDataBinding["default"])(AmpQuantitySelector);

exports["default"] = _default;
//# sourceMappingURL=AmpQuantitySelector.js.map