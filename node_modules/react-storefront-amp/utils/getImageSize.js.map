{"version":3,"sources":["../../src/utils/getImageSize.js"],"names":["getImageSize","url","imageService","startsWith","base64Img","toString","split","trim","imgAttributes","Buffer","from","width","height","fetch","encodeURIComponent","then","res","json"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;AAOe,SAASA,YAAT,CAAsBC,GAAtB,EAA+D;AAAA,MAApCC,YAAoC,uEAArB,mBAAqB;;AAC5E;AACA,MAAID,GAAG,CAACE,UAAJ,CAAe,OAAf,CAAJ,EAA6B;AAC3B,QAAMC,SAAS,GAAGH,GAAG,CAClBI,QADe,GAEfC,KAFe,CAET,GAFS,EAEJ,CAFI,EAGfC,IAHe,EAAlB;AAIA,QAAMC,aAAa,GAAG,sBAAmBC,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuB,QAAvB,CAAnB,CAAtB;AAL2B,QAMnBO,KANmB,GAMDH,aANC,CAMnBG,KANmB;AAAA,QAMZC,MANY,GAMDJ,aANC,CAMZI,MANY;AAO3B,WAAO;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,MAAM,EAANA;AAAT,KAAP;AACD,GAV2E,CAY5E;;;AACA,SAAOC,KAAK,mBAAYX,YAAZ,uBAAqCY,kBAAkB,CAACb,GAAD,CAAvD,EAAL,CAAqEc,IAArE,CAA0E,UAAAC,GAAG;AAAA,WAClFA,GAAG,CAACC,IAAJ,EADkF;AAAA,GAA7E,CAAP;AAGD","sourcesContent":["import getImageAttributes from 'probe-image-size/sync'\n\n/**\n * Returns the height and width of an image\n * @param {String} url The image url or src for inline images\n * @param {Object} options\n * @param {Object} options.imageService The hostname to use for the image size service\n * @return {Object} An object with `height` and `width`.\n */\nexport default function getImageSize(url, imageService = 'image.moovweb.net') {\n  // we're dealing with an inline image\n  if (url.startsWith('data:')) {\n    const base64Img = url\n      .toString()\n      .split(',')[1]\n      .trim()\n    const imgAttributes = getImageAttributes(Buffer.from(base64Img, 'base64'))\n    const { width, height } = imgAttributes\n    return { width, height }\n  }\n\n  // it's an external url - use the Moovweb image service\n  return fetch(`https://${imageService}/size?url=${encodeURIComponent(url)}`).then(res =>\n    res.json(),\n  )\n}\n"],"file":"getImageSize.js"}