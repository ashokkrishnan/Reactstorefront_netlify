{"version":3,"sources":["../../src/utils/batchPromises.js"],"names":["batchPromises","batchSize","thenArr","fn","queue","PQueue","concurrency","addAll","map","i"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;AAKe,SAASA,aAAT,CAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CC,EAA3C,EAA+C;AAC5D,MAAMC,KAAK,GAAG,IAAIC,kBAAJ,CAAW;AAAEC,IAAAA,WAAW,EAAEL;AAAf,GAAX,CAAd;AACA,SAAOG,KAAK,CAACG,MAAN,CAAaL,OAAO,CAACM,GAAR,CAAY,UAAAC,CAAC;AAAA,WAAI;AAAA,aAAMN,EAAE,CAACM,CAAD,CAAR;AAAA,KAAJ;AAAA,GAAb,CAAb,CAAP;AACD","sourcesContent":["import PQueue from 'p-queue'\n\n/**\n * @param {*} batchSize The number of promises to run concurrently\n * @param {*} thenArr\n * @param {*} fn\n */\nexport default function batchPromises(batchSize, thenArr, fn) {\n  const queue = new PQueue({ concurrency: batchSize })\n  return queue.addAll(thenArr.map(i => () => fn(i)))\n}\n"],"file":"batchPromises.js"}