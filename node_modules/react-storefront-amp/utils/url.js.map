{"version":3,"sources":["../../src/utils/url.js"],"names":["relativeURL","url","replace","length","cleanProtocol","protocol","absoluteURL","hostname","port","pathname","match","canUseClientSideNavigation","router","willNavigateToUpstream"],"mappings":";;;;;;;;;AAAA;;;;;AAIA;;;;;;;;;;;;AAYO,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AAC/B,MAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,IAAP;AACD,GAFD,MAEO;AACLA,IAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,uBAAZ,EAAqC,EAArC,CAAN;AACA,QAAID,GAAG,CAACE,MAAJ,KAAe,CAAnB,EAAsBF,GAAG,GAAG,GAAN;AACtB,WAAOA,GAAP;AACD;AACF,C,CAED;;;AACA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ;AAAA,SAAI,CAACA,QAAQ,IAAI,OAAb,EAAsBH,OAAtB,CAA8B,GAA9B,EAAmC,EAAnC,CAAJ;AAAA,CAA9B;AAEA;;;;;;;;;AAOO,SAASI,WAAT,CAAqBL,GAArB,EAAuE;AAAA,iFAAJ,EAAI;AAAA,MAA3CI,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCE,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,QAAiB,QAAjBA,QAAiB;;AAC5E,MAAIR,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,IAAP;AACD,GAFD,MAEO,IAAIA,GAAG,CAACS,KAAJ,CAAU,gBAAV,CAAJ,EAAiC;AACtC,WAAOT,GAAP;AACD,GAFM,MAEA,IAAIA,GAAG,CAACS,KAAJ,CAAU,OAAV,CAAJ,EAAwB;AAC7B;AACA,qBAAUN,aAAa,CAACC,QAAD,CAAvB,cAAqCJ,GAArC;AACD,GAHM,MAGA,IAAI,CAACA,GAAG,CAACS,KAAJ,CAAU,UAAV,CAAL,EAA4B;AACjC,QAAIH,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAON,GAAP;AACD,KAHgC,CAKjC;;;AACA,QAAI,CAACA,GAAG,CAACS,KAAJ,CAAU,KAAV,CAAL,EAAuB;AACrB,UAAI,CAACD,QAAL,EAAe;AACb,eAAOR,GAAP;AACD;;AACDA,MAAAA,GAAG,aAAMQ,QAAN,cAAkBR,GAAlB,CAAH;AACD;;AAED,QAAIO,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAA1B,IAAmCA,IAAI,KAAK,EAA5C,IAAkDA,IAAI,IAAI,IAA9D,EAAoE;AAClEA,MAAAA,IAAI,GAAG,EAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAG,MAAMA,IAAb;AACD;;AAED,qBAAUJ,aAAa,CAACC,QAAD,CAAvB,gBAAuCE,QAAvC,SAAkDC,IAAlD,SAAyDP,GAAzD;AACD,GApBM,MAoBA;AACL,WAAOA,GAAP;AACD;AACF;AAED;;;;;;;;AAMO,SAASU,0BAAT,CAAoCV,GAApC,EAAyCW,MAAzC,EAAiD;AACtD,MAAI,CAACX,GAAL,EAAU,OAAO,KAAP,CAD4C,CAGtD;;AACA,MAAIA,GAAG,CAACS,KAAJ,CAAU,gBAAV,CAAJ,EAAiC,OAAO,KAAP,CAJqB,CAMtD;;AACA,MAAIT,GAAG,CAACS,KAAJ,CAAU,IAAV,CAAJ,EAAqB,OAAO,KAAP,CAPiC,CAStD;;AACA,MAAIT,GAAG,CAACS,KAAJ,CAAU,sBAAV,CAAJ,EAAuC,OAAO,KAAP,CAVe,CAYtD;;AACA,MAAIE,MAAM,IAAIA,MAAM,CAACC,sBAAP,CAA8BZ,GAA9B,CAAd,EAAkD,OAAO,KAAP;AAElD,SAAO,IAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\n/**\n * Strips the protocol and hostname from the URL, returning a relative URL.\n *\n * @example <caption>Example usage of relativeURL</caption>\n *\n * import { relativeURL } from 'react-storefront/utils/url'\n *\n * relativeURL('https://www.domain.com/path/to/page') // returns \"/path/to/page\"\n *\n * @param {String} url An absolute or relative URL\n * @return {String} A relative URL\n */\nexport function relativeURL(url) {\n  if (url == null) {\n    return null\n  } else {\n    url = url.replace(/^(https?:)?\\/\\/[^\\/]*/, '')\n    if (url.length === 0) url = '/'\n    return url\n  }\n}\n\n// If a protocol is not specified, fallback to secure\nconst cleanProtocol = protocol => (protocol || 'https').replace(/:/, '')\n\n/**\n * Creates an absolute URL for the given URL\n *\n * @param {String} url A relative URL\n * @param {LocationModel} currentLocation The current browser location\n * @return {String} An absolute URL\n */\nexport function absoluteURL(url, { protocol, hostname, port, pathname } = {}) {\n  if (url == null) {\n    return null\n  } else if (url.match(/^(mailto|tel):/)) {\n    return url\n  } else if (url.match(/^\\/\\//)) {\n    // URL with hostname but no protocol (starting with //)\n    return `${cleanProtocol(protocol)}:${url}`\n  } else if (!url.match(/^https?:/)) {\n    if (hostname == null) {\n      return url\n    }\n\n    // relative URL\n    if (!url.match(/^\\//)) {\n      if (!pathname) {\n        return url\n      }\n      url = `${pathname}/${url}`\n    }\n\n    if (port === '80' || port === '443' || port === '' || port == null) {\n      port = ''\n    } else {\n      port = ':' + port\n    }\n\n    return `${cleanProtocol(protocol)}://${hostname}${port}${url}`\n  } else {\n    return url\n  }\n}\n\n/**\n * Returns true if a URL can be navigated to on the client using history.push\n * @param {String} url The URL to check\n * @param {String} router The router\n * @return {Boolean}\n */\nexport function canUseClientSideNavigation(url, router) {\n  if (!url) return false\n\n  // return false for non-webpage links\n  if (url.match(/^(mailto|tel):/)) return false\n\n  // return false for hash links\n  if (url.match(/^#/)) return false\n\n  // return false for absolute URLs\n  if (url.match(/^(http|https)?:?\\/\\//)) return false\n\n  // check if there is a proxyUpstream handler on the corresponding route\n  if (router && router.willNavigateToUpstream(url)) return false\n\n  return true\n}\n"],"file":"url.js"}