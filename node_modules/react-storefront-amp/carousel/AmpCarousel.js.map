{"version":3,"sources":["../../src/carousel/AmpCarousel.js"],"names":["styles","theme","root","display","flexDirection","justifyContent","alignItems","position","flex","overflow","dot","backgroundColor","palette","text","primary","width","height","borderWidth","borderStyle","borderColor","background","paper","borderRadius","margin","transitionDuration","dotSelected","dots","bottom","textAlign","useStyles","name","Dot","index","classes","ampStateProperty","AmpCarousel","props","amp","id","pairedCarouselId","className","indicators","style","children","layout","belowAdornments","autoplay","interval","slideSpacing","on","createHandler","setState","prop","value","delay","React","Children","map","child","padding","_","propTypes","arrows","PropTypes","bool","selectedIndex","number","string","defaultProps"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\nimport React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport PropTypes from 'prop-types'\nimport Head from 'next/head'\nimport withDataBinding from '../bind/withDataBinding'\nimport Fill from 'react-storefront/Fill'\nimport Carousel from 'react-storefront/carousel/Carousel'\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    position: 'relative',\n    '& img': {\n      display: 'block',\n    },\n    flex: 1,\n    overflow: 'hidden',\n  },\n\n  dot: {\n    backgroundColor: fade(theme.palette.text.primary, 0.25),\n    width: 8,\n    height: 8,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: theme.palette.background.paper,\n    borderRadius: '50%',\n    display: 'inline-block',\n    margin: '0 2px',\n    // Same duration as SwipeableViews animation\n    transitionDuration: '0.35s',\n  },\n\n  dotSelected: {\n    backgroundColor: theme.palette.text.primary,\n  },\n\n  dots: {\n    position: 'absolute',\n    bottom: '5px',\n    textAlign: 'center',\n    width: '100%',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFAmpCarousel' })\n\nfunction Dot({ index, classes, ampStateProperty }) {\n  classes = useStyles({ classes })\n  return (\n    <div\n      key={index}\n      className={clsx(classes.dot, {\n        [classes.dotSelected]: index === 0,\n      })}\n      amp-bind={`class->${ampStateProperty} == ${index} ? '${classes.dot} ${classes.dotSelected}' : '${classes.dot}'`}\n    />\n  )\n}\n\n/**\n * A swipeable image selector suitable for PDPs\n */\nfunction AmpCarousel(props) {\n  let {\n    amp,\n    id,\n    pairedCarouselId,\n    classes,\n    className,\n    height,\n    indicators,\n    style,\n    children,\n    layout,\n    belowAdornments,\n    autoplay,\n    interval,\n    slideSpacing,\n  } = props\n\n  if (!amp) return <Carousel {...props} />\n\n  classes = useStyles({ classes })\n\n  return (\n    <div className={clsx(className, classes.root)} style={style}>\n      <Head>\n        <script\n          async\n          custom-element=\"amp-carousel\"\n          src=\"https://cdn.ampproject.org/v0/amp-carousel-0.1.js\"\n        />\n      </Head>\n      <Fill height={height}>\n        <amp-carousel\n          id={id}\n          controls\n          layout={layout}\n          type=\"slides\"\n          {...amp.on(\n            amp.createHandler(\n              'slideChange',\n              amp.setState(\n                { prop: 'index', value: 'event.index' },\n                { prop: 'pairedIndex', value: 'event.index' },\n              ),\n              `${pairedCarouselId}.goToSlide(index=event.index)`,\n            ),\n          )}\n          {...(autoplay ? { autoplay, delay: interval } : {})}\n        >\n          {React.Children.map(children, (child, index) => (\n            <div\n              style={{\n                padding: `0 ${slideSpacing}px`,\n              }}\n              {...amp.on(\n                amp.createHandler(\n                  'tap',\n                  amp.setState(\n                    { value: index, prop: 'pairedIndex' },\n                    { value: true, prop: 'open' },\n                  ),\n                  `${pairedCarouselId}.goToSlide(index=${index})`,\n                ),\n              )}\n            >\n              {child}\n            </div>\n          ))}\n        </amp-carousel>\n      </Fill>\n      {belowAdornments}\n      {indicators && (\n        <div className={classes.dots}>\n          {React.Children.map(children, (_, index) => (\n            <Dot index={index} ampStateProperty={`rsfMediaCarousel.${id}.index`} />\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nAmpCarousel.propTypes = {\n  /**\n   * Display left/right arrows for navigating through images\n   */\n  arrows: PropTypes.bool,\n\n  /**\n   * Display indicator dots at the bottom of the component\n   */\n  indicators: PropTypes.bool,\n\n  /**\n   * Option to manually set the selected index\n   */\n  selectedIndex: PropTypes.number,\n\n  /**\n   * Height on carousel container, defaults to 300\n   */\n  height: PropTypes.number,\n\n  /**\n   * ID to use for amp-carousel component, defaults to \"carousel\"\n   */\n  id: PropTypes.string,\n\n  /**\n   * ID of another amp-carousel that should also be changed when this one is changed\n   */\n  pairedCarouselId: PropTypes.string,\n\n  /**\n   * AMP layout type, defaults to \"fill\"\n   */\n  layout: PropTypes.string,\n\n  /**\n   * If false, the auto play behavior is disabled\n   */\n  autoplay: PropTypes.bool,\n\n  /**\n   * Delay between auto play transitions (in ms)\n   */\n  interval: PropTypes.number,\n\n  /**\n   * Amount of pixels of spacing between each slide\n   */\n  slideSpacing: PropTypes.number,\n}\n\nAmpCarousel.defaultProps = {\n  arrows: true,\n  indicators: true,\n  id: 'carousel',\n  layout: 'fill',\n  autoplay: false,\n  interval: 3000,\n  slideSpacing: 0,\n}\n\nexport default withDataBinding(AmpCarousel)\n"],"file":"AmpCarousel.js"}