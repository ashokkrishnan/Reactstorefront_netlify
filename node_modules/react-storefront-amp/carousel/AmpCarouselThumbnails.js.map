{"version":3,"sources":["../../src/carousel/AmpCarouselThumbnails.js"],"names":["useStyles","styles","name","AmpCarouselThumbnails","props","amp","carouselId","thumbnails","className","thumbnailPosition","isVertical","includes","thumbs","tabsRoot","tabsVertical","tabsRootLeft","tabsRootRight","tabsRootTop","tabsRootBottom","map","i","icon","thumb","tabRoot","selectedTab","bind","attribute","value","getValue","tabWrapper","tabsIndicator","hidden"],"mappings":";;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAVA;;;;AAYA,IAAMA,SAAS,GAAG,wBAAWC,0BAAX,EAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AACpC,MAAI,CAAC,kBAAL,EAAe,OAAO,gCAAC,8BAAD,EAAwBA,KAAxB,CAAP;AADqB,MAG5BC,GAH4B,GAGkCD,KAHlC,CAG5BC,GAH4B;AAAA,MAGvBC,UAHuB,GAGkCF,KAHlC,CAGvBE,UAHuB;AAAA,MAGXC,UAHW,GAGkCH,KAHlC,CAGXG,UAHW;AAAA,MAGCC,SAHD,GAGkCJ,KAHlC,CAGCI,SAHD;AAAA,MAGYC,iBAHZ,GAGkCL,KAHlC,CAGYK,iBAHZ;AAKpC,MAAMR,MAAM,GAAGD,SAAS,EAAxB;AACA,MAAMU,UAAU,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkBC,QAAlB,CAA2BF,iBAA3B,CAAnB;AAEA,SACE;AACE,IAAA,SAAS,EAAE,uBAAKD,SAAL,EAAgBP,MAAM,CAACW,MAAvB,EAA+BX,MAAM,CAACY,QAAtC,uDACRZ,MAAM,CAACa,YADC,EACcJ,UADd,2CAERT,MAAM,CAACc,YAFC,EAEcN,iBAAiB,KAAK,MAFpC,2CAGRR,MAAM,CAACe,aAHC,EAGeP,iBAAiB,KAAK,OAHrC,2CAIRR,MAAM,CAACgB,WAJC,EAIaR,iBAAiB,KAAK,KAJnC,2CAKRR,MAAM,CAACiB,cALC,EAKgBT,iBAAiB,KAAK,QALtC;AADb,KASGF,UAAU,CAACY,GAAX,CAAe,UAACf,KAAD,EAAQgB,CAAR,EAAc;AAC5B,QAAMC,IAAI,GACR,gCAAC,oBAAD,gCAAWjB,KAAX;AAAkB,MAAA,UAAU,EAAC,SAA7B;AAAuC,MAAA,MAAM,EAAC,MAA9C;AAAqD,MAAA,OAAO,MAA5D;AAA6D,MAAA,SAAS,EAAEH,MAAM,CAACqB;AAA/E,OADF;;AAGA,WACE;AACE,MAAA,SAAS,EAAE,uBAAKrB,MAAM,CAACsB,OAAZ,EAAqBH,CAAC,KAAK,CAAN,IAAWnB,MAAM,CAACuB,WAAvC,CADb;AAEE,MAAA,EAAE,gBAASlB,UAAT,8BAAuCc,CAAvC;AAFJ,OAGMf,GAAG,CAACoB,IAAJ,CAAS;AACXC,MAAAA,SAAS,EAAE,OADA;AAEXC,MAAAA,KAAK,YAAKtB,GAAG,CAACuB,QAAJ,EAAL,iBAA0BR,CAA1B,iBAAkC,uBACrCnB,MAAM,CAACsB,OAD8B,EAErCtB,MAAM,CAACuB,WAF8B,CAAlC,kBAGIvB,MAAM,CAACsB,OAHX;AAFM,KAAT,CAHN,GAWE;AAAK,MAAA,SAAS,EAAE,uBAAKtB,MAAM,CAAC4B,UAAZ;AAAhB,OAA0CR,IAA1C,CAXF,EAYE;AACE,MAAA,SAAS,EAAE,uBAAKpB,MAAM,CAAC6B,aAAZ,uCAA8B7B,MAAM,CAAC8B,MAArC,EAA8CX,CAAC,KAAK,CAApD;AADb,OAEMf,GAAG,CAACoB,IAAJ,CAAS;AACXC,MAAAA,SAAS,EAAE,OADA;AAEXC,MAAAA,KAAK,YAAKtB,GAAG,CAACuB,QAAJ,EAAL,iBAA0BR,CAA1B,iBAAkC,uBACrCnB,MAAM,CAAC6B,aAD8B,CAAlC,kBAEI,uBAAK7B,MAAM,CAAC6B,aAAZ,uCAA8B7B,MAAM,CAAC8B,MAArC,EAA8C,IAA9C,EAFJ;AAFM,KAAT,CAFN,EAZF,CADF;AAwBD,GA5BA,CATH,CADF;AAyCD;;eAEc,iCAAgB5B,qBAAhB,C","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\nimport React from 'react'\nimport clsx from 'clsx'\nimport Image from '../AmpImage'\nimport CarouselThumbnails, { styles } from 'react-storefront/carousel/CarouselThumbnails'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useAmp } from 'next/amp'\nimport withDataBinding from '../bind/withDataBinding'\n\nconst useStyles = makeStyles(styles, { name: 'RSFAmpCarouselThumbnails' })\n\nfunction AmpCarouselThumbnails(props) {\n  if (!useAmp()) return <CarouselThumbnails {...props} />\n\n  const { amp, carouselId, thumbnails, className, thumbnailPosition } = props\n\n  const styles = useStyles()\n  const isVertical = ['left', 'right'].includes(thumbnailPosition)\n\n  return (\n    <div\n      className={clsx(className, styles.thumbs, styles.tabsRoot, {\n        [styles.tabsVertical]: isVertical,\n        [styles.tabsRootLeft]: thumbnailPosition === 'left',\n        [styles.tabsRootRight]: thumbnailPosition === 'right',\n        [styles.tabsRootTop]: thumbnailPosition === 'top',\n        [styles.tabsRootBottom]: thumbnailPosition === 'bottom',\n      })}\n    >\n      {thumbnails.map((props, i) => {\n        const icon = (\n          <Image {...props} ImgElement=\"amp-img\" layout=\"fill\" contain className={styles.thumb} />\n        )\n        return (\n          <div\n            className={clsx(styles.tabRoot, i === 0 && styles.selectedTab)}\n            on={`tap:${carouselId}.goToSlide(index=${i})`}\n            {...amp.bind({\n              attribute: 'class',\n              value: `${amp.getValue()} == ${i} ? '${clsx(\n                styles.tabRoot,\n                styles.selectedTab,\n              )}' : '${styles.tabRoot}'`,\n            })}\n          >\n            <div className={clsx(styles.tabWrapper)}>{icon}</div>\n            <div\n              className={clsx(styles.tabsIndicator, { [styles.hidden]: i !== 0 })}\n              {...amp.bind({\n                attribute: 'class',\n                value: `${amp.getValue()} == ${i} ? '${clsx(\n                  styles.tabsIndicator,\n                )}' : '${clsx(styles.tabsIndicator, { [styles.hidden]: true })}'`,\n              })}\n            />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default withDataBinding(AmpCarouselThumbnails)\n"],"file":"AmpCarouselThumbnails.js"}