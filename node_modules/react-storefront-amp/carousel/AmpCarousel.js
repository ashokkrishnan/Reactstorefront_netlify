"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _colorManipulator = require("@material-ui/core/styles/colorManipulator");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _head = _interopRequireDefault(require("next/head"));

var _withDataBinding = _interopRequireDefault(require("../bind/withDataBinding"));

var _Fill = _interopRequireDefault(require("react-storefront/Fill"));

var _Carousel = _interopRequireDefault(require("react-storefront/carousel/Carousel"));

/**
 * @license
 * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.
 */
var styles = function styles(theme) {
  return {
    root: {
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'stretch',
      position: 'relative',
      '& img': {
        display: 'block'
      },
      flex: 1,
      overflow: 'hidden'
    },
    dot: {
      backgroundColor: (0, _colorManipulator.fade)(theme.palette.text.primary, 0.25),
      width: 8,
      height: 8,
      borderWidth: '1px',
      borderStyle: 'solid',
      borderColor: theme.palette.background.paper,
      borderRadius: '50%',
      display: 'inline-block',
      margin: '0 2px',
      // Same duration as SwipeableViews animation
      transitionDuration: '0.35s'
    },
    dotSelected: {
      backgroundColor: theme.palette.text.primary
    },
    dots: {
      position: 'absolute',
      bottom: '5px',
      textAlign: 'center',
      width: '100%'
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFAmpCarousel'
});

function Dot(_ref) {
  var index = _ref.index,
      classes = _ref.classes,
      ampStateProperty = _ref.ampStateProperty;
  classes = useStyles({
    classes: classes
  });
  return _react["default"].createElement("div", {
    key: index,
    className: (0, _clsx2["default"])(classes.dot, (0, _defineProperty2["default"])({}, classes.dotSelected, index === 0)),
    "amp-bind": "class->".concat(ampStateProperty, " == ").concat(index, " ? '").concat(classes.dot, " ").concat(classes.dotSelected, "' : '").concat(classes.dot, "'")
  });
}
/**
 * A swipeable image selector suitable for PDPs
 */


function AmpCarousel(props) {
  var amp = props.amp,
      id = props.id,
      pairedCarouselId = props.pairedCarouselId,
      classes = props.classes,
      className = props.className,
      height = props.height,
      indicators = props.indicators,
      style = props.style,
      children = props.children,
      layout = props.layout,
      belowAdornments = props.belowAdornments,
      autoplay = props.autoplay,
      interval = props.interval,
      slideSpacing = props.slideSpacing;
  if (!amp) return _react["default"].createElement(_Carousel["default"], props);
  classes = useStyles({
    classes: classes
  });
  return _react["default"].createElement("div", {
    className: (0, _clsx2["default"])(className, classes.root),
    style: style
  }, _react["default"].createElement(_head["default"], null, _react["default"].createElement("script", {
    async: true,
    "custom-element": "amp-carousel",
    src: "https://cdn.ampproject.org/v0/amp-carousel-0.1.js"
  })), _react["default"].createElement(_Fill["default"], {
    height: height
  }, _react["default"].createElement("amp-carousel", (0, _extends2["default"])({
    id: id,
    controls: true,
    layout: layout,
    type: "slides"
  }, amp.on(amp.createHandler('slideChange', amp.setState({
    prop: 'index',
    value: 'event.index'
  }, {
    prop: 'pairedIndex',
    value: 'event.index'
  }), "".concat(pairedCarouselId, ".goToSlide(index=event.index)"))), autoplay ? {
    autoplay: autoplay,
    delay: interval
  } : {}), _react["default"].Children.map(children, function (child, index) {
    return _react["default"].createElement("div", (0, _extends2["default"])({
      style: {
        padding: "0 ".concat(slideSpacing, "px")
      }
    }, amp.on(amp.createHandler('tap', amp.setState({
      value: index,
      prop: 'pairedIndex'
    }, {
      value: true,
      prop: 'open'
    }), "".concat(pairedCarouselId, ".goToSlide(index=").concat(index, ")")))), child);
  }))), belowAdornments, indicators && _react["default"].createElement("div", {
    className: classes.dots
  }, _react["default"].Children.map(children, function (_, index) {
    return _react["default"].createElement(Dot, {
      index: index,
      ampStateProperty: "rsfMediaCarousel.".concat(id, ".index")
    });
  })));
}

AmpCarousel.propTypes = {
  /**
   * Display left/right arrows for navigating through images
   */
  arrows: _propTypes["default"].bool,

  /**
   * Display indicator dots at the bottom of the component
   */
  indicators: _propTypes["default"].bool,

  /**
   * Option to manually set the selected index
   */
  selectedIndex: _propTypes["default"].number,

  /**
   * Height on carousel container, defaults to 300
   */
  height: _propTypes["default"].number,

  /**
   * ID to use for amp-carousel component, defaults to "carousel"
   */
  id: _propTypes["default"].string,

  /**
   * ID of another amp-carousel that should also be changed when this one is changed
   */
  pairedCarouselId: _propTypes["default"].string,

  /**
   * AMP layout type, defaults to "fill"
   */
  layout: _propTypes["default"].string,

  /**
   * If false, the auto play behavior is disabled
   */
  autoplay: _propTypes["default"].bool,

  /**
   * Delay between auto play transitions (in ms)
   */
  interval: _propTypes["default"].number,

  /**
   * Amount of pixels of spacing between each slide
   */
  slideSpacing: _propTypes["default"].number
};
AmpCarousel.defaultProps = {
  arrows: true,
  indicators: true,
  id: 'carousel',
  layout: 'fill',
  autoplay: false,
  interval: 3000,
  slideSpacing: 0
};

var _default = (0, _withDataBinding["default"])(AmpCarousel);

exports["default"] = _default;
//# sourceMappingURL=AmpCarousel.js.map