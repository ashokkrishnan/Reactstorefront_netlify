"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ImageMagnify;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactImageMagnify = _interopRequireDefault(require("react-image-magnify"));

var _amp = require("next/amp");

var _qs = _interopRequireDefault(require("qs"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getOptimizedSrc(url, options) {
  // Do not try to optimize base64 image data
  if (url.indexOf('data:') === 0) return url;
  return "https://opt.moovweb.net/?".concat(_qs["default"].stringify(_objectSpread({}, options, {
    img: url
  })));
}

function ImageMagnify(props) {
  if (!(0, _amp.useAmp)()) return _react["default"].createElement(_reactImageMagnify["default"], props);
  var optimize = props.optimize,
      smallImage = props.smallImage,
      largeImage = props.largeImage,
      others = (0, _objectWithoutProperties2["default"])(props, ["optimize", "smallImage", "largeImage"]);
  return _react["default"].createElement(_reactImageMagnify["default"], (0, _extends2["default"])({}, others, {
    smallImage: _objectSpread({}, smallImage, {
      src: getOptimizedSrc(smallImage.src, optimize)
    }),
    largeImage: _objectSpread({}, largeImage, {
      src: getOptimizedSrc(largeImage.src, optimize)
    })
  }));
}
//# sourceMappingURL=ImageMagnify.js.map