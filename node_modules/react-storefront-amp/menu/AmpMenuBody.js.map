{"version":3,"sources":["../../src/menu/AmpMenuBody.js"],"names":["AmpMenuBody","props","MenuContext","drawerWidth","styles","theme","ampBody","transform","overflowY","height","left","top","position","display","flex","transition","alignItems","useStyles","name","classes","bodyWrap","inFocus","propTypes","MenuBody","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAI,CAAC,kBAAL,EAAe;AACb,WAAO,gCAAC,oBAAD,EAAcA,KAAd,CAAP;AACD;;AAHwC,oBAKjB,uBAAWC,uBAAX,CALiB;AAAA,MAKjCC,WALiC,eAKjCA,WALiC;;AAOzC,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,WAAK;AACvBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,iBADJ;AAEPC,QAAAA,SAAS,EAAE,MAFJ;AAGPC,QAAAA,MAAM,EAAE,MAHD;AAIPC,QAAAA,IAAI,EAAE,CAJC;AAKPC,QAAAA,GAAG,EAAE,CALE;AAMPC,QAAAA,QAAQ,EAAE,UANH;AAOPC,QAAAA,OAAO,EAAE,MAPF;AAQPC,QAAAA,IAAI,EAAE,QARC;AASPC,QAAAA,UAAU,EAAE,wBATL;AAUPC,QAAAA,UAAU,EAAE,SAVL;AAWP,mBAAW;AACTT,UAAAA,SAAS,EAAE;AADF,SAXJ;AAcP,mBAAW;AACTA,UAAAA,SAAS,uBAAgB,CAAC,CAAD,GAAKJ,WAArB;AADA,SAdJ;AAiBP,mBAAW;AACTI,UAAAA,SAAS,uBAAgB,CAAC,CAAD,GAAKJ,WAArB;AADA,SAjBJ;AAoBP,mBAAW;AACTI,UAAAA,SAAS,uBAAgB,CAAC,CAAD,GAAKJ,WAArB;AADA;AApBJ;AADc,KAAL;AAAA,GAApB;;AA2BA,MAAMc,SAAS,GAAG,4BAAWb,MAAX,EAAmB;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAnB,CAAlB;AACA,MAAMC,OAAO,GAAGF,SAAS,CAAChB,KAAD,CAAzB;AAEA,SACE,gCAAC,oBAAD,gCACMA,KADN;AAEE,IAAA,OAAO,EAAE;AACPmB,MAAAA,QAAQ,EAAE,sBAAKD,OAAO,CAACb,OAAb,EAAsBa,OAAO,CAACE,OAA9B;AADH,KAFX;AAKE,IAAA,SAAS,EAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAuBF,OAAO,CAACb,OAA/B;AATS;AALb,KADF;AAmBD;;AAEDN,WAAW,CAACsB,SAAZ,GAAwBC,qBAASD,SAAjC;AAEAtB,WAAW,CAACwB,YAAZ,GAA2BD,qBAASC,YAApC","sourcesContent":["import React, { useContext } from 'react'\nimport MenuBody from 'react-storefront/menu/MenuBody'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport clsx from 'clsx'\nimport MenuContext from 'react-storefront/menu/MenuContext'\nimport { useAmp } from 'next/amp'\n\n/**\n * Overrides MenuBody and provides a way to switch cards based on AMP state.\n */\nexport default function AmpMenuBody(props) {\n  if (!useAmp()) {\n    return <MenuBody {...props} />\n  }\n\n  const { drawerWidth } = useContext(MenuContext)\n\n  const styles = theme => ({\n    ampBody: {\n      transform: 'translateX(0px)',\n      overflowY: 'auto',\n      height: '100%',\n      left: 0,\n      top: 0,\n      position: 'absolute',\n      display: 'flex',\n      flex: '1 1 0%',\n      transition: 'transform ease-out .2s',\n      alignItems: 'stretch',\n      '&.card0': {\n        transform: 'translateX(0)',\n      },\n      '&.card1': {\n        transform: `translateX(${-1 * drawerWidth}px)`,\n      },\n      '&.card2': {\n        transform: `translateX(${-2 * drawerWidth}px)`,\n      },\n      '&.card3': {\n        transform: `translateX(${-3 * drawerWidth}px)`,\n      },\n    },\n  })\n\n  const useStyles = makeStyles(styles, { name: 'RSFAmpMenuBody' })\n  const classes = useStyles(props)\n\n  return (\n    <MenuBody\n      {...props}\n      classes={{\n        bodyWrap: clsx(classes.ampBody, classes.inFocus),\n      }}\n      wrapProps={{\n        // This conditional handles the positioning of each menu body\n        // By default all bodies except for root are hidden to the right\n        //\n        // If moving forward through the menu, the current body translates in\n        // from the right and the previous body is translated to the left.\n        //\n        // When moving backwards this is reversed. There are some checks for the root\n        // body since it always is hidden to the left.\n        'amp-bind': `class->'${classes.ampBody}' + ' card' + (rsfMenuState.card || 0)`,\n      }}\n    />\n  )\n}\n\nAmpMenuBody.propTypes = MenuBody.propTypes\n\nAmpMenuBody.defaultProps = MenuBody.defaultProps\n"],"file":"AmpMenuBody.js"}