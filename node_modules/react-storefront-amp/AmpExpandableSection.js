"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = AmpExpandableSection;
exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _ExpandLess = _interopRequireDefault(require("@material-ui/icons/ExpandLess"));

var _ExpandMore = _interopRequireDefault(require("@material-ui/icons/ExpandMore"));

var _styles = require("@material-ui/core/styles");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _AmpAccordion = _interopRequireDefault(require("./AmpAccordion"));

var _amp = require("next/amp");

var _ExpandableSection = _interopRequireDefault(require("react-storefront/ExpandableSection"));

var styles = function styles(theme) {
  return {
    root: {
      boxShadow: 'none',
      borderBottom: "1px solid ".concat(theme.palette.divider),
      background: 'transparent'
    },
    summary: {
      backgroundColor: 'transparent',
      padding: "12px ".concat(theme.spacing(2), "px"),
      borderStyle: 'none',
      outlineWidth: 0
    },
    toggle: {
      position: 'absolute',
      right: '18px',
      top: '13px'
    },
    expand: {
      display: 'block',
      'section[expanded] &': {
        display: 'none'
      }
    },
    collapse: {
      display: 'none',
      'section[expanded] &': {
        display: 'block'
      }
    },
    details: {
      backgroundColor: 'transparent',
      padding: theme.spacing(0, 0, 2, 0)
    },
    margins: {},
    // These are intentionally left blank - react-storefront provides this on Expandable
    // section, so we must as well to avoid warnings
    summaryExpanded: {},
    expandIconExpanded: {}
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFAmpExpandableSection'
});
/**
 * An AMP-compatible expandable section based on amp-accordion.
 */

function AmpExpandableSection(props) {
  if (!(0, _amp.useAmp)()) {
    return _react["default"].createElement(_ExpandableSection["default"], props);
  }

  var classes = props.classes,
      expanded = props.expanded,
      _props$children = props.children,
      children = _props$children === void 0 ? [] : _props$children,
      title = props.title,
      ExpandIcon = props.ExpandIcon,
      CollapseIcon = props.CollapseIcon,
      fromAccordion = props.fromAccordion,
      defaultExpanded = props.defaultExpanded;
  classes = useStyles({
    classes: classes
  });

  if (ExpandIcon === _ExpandMore["default"]) {
    CollapseIcon = _ExpandLess["default"];
  }

  var sectionAttributes = {};
  if (expanded || defaultExpanded) sectionAttributes.expanded = '';

  var section = _react["default"].createElement("section", (0, _extends2["default"])({}, sectionAttributes, {
    className: (0, _clsx["default"])(classes.root, classes.margins)
  }), _react["default"].createElement(_Typography["default"], {
    variant: "subtitle1",
    component: "h3",
    className: classes.summary
  }, title, _react["default"].createElement(ExpandIcon, {
    className: (0, _clsx["default"])(classes.toggle, classes.expand)
  }), _react["default"].createElement(CollapseIcon, {
    className: (0, _clsx["default"])(classes.toggle, classes.collapse)
  })), _react["default"].createElement("div", {
    className: classes.details
  }, children));

  if (fromAccordion) {
    return section;
  } else {
    return _react["default"].createElement(_AmpAccordion["default"], null, section);
  }
}

AmpExpandableSection.propTypes = {
  /**
   * The title for the header of the expandable section
   */
  title: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element]),

  /**
   * Set to true to expand the panel
   */
  expanded: _propTypes["default"].bool,

  /**
   * Set to true to expand the panel
   */
  defaultExpanded: _propTypes["default"].bool,

  /**
   * The icon to use for collapsed groups
   */
  ExpandIcon: _propTypes["default"].any,

  /**
   * The icon to use for expanded groups
   */
  CollapseIcon: _propTypes["default"].any,

  /**
   * Identifier if component is a child of Accordion
   */
  fromAccordion: _propTypes["default"].bool
};
AmpExpandableSection.defaultProps = {
  ExpandIcon: _ExpandMore["default"],
  CollapseIcon: _ExpandMore["default"]
};
//# sourceMappingURL=AmpExpandableSection.js.map