"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _head = _interopRequireDefault(require("next/head"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _amp = require("next/amp");

var _withDataBinding = _interopRequireDefault(require("./bind/withDataBinding"));

var _AmpContext = _interopRequireDefault(require("./AmpContext"));

/**
 * Creates an amp-state with an initial value
 */
function AmpState(_ref) {
  var id = _ref.id,
      amp = _ref.amp,
      remote = _ref.remote,
      initialState = _ref.initialState,
      children = _ref.children;

  var _ref2 = (0, _react.useContext)(_AmpContext["default"]) || {},
      nextId = _ref2.nextId;

  id = id || nextId();
  children = children ? children(id) : null;
  var props = {
    id: id
  };

  if (remote) {
    Object.assign(props, amp.bind({
      attribute: 'src',
      value: remote.expression
    }), {
      src: remote.url
    });
  }

  if ((0, _amp.useAmp)()) {
    return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_head["default"], null, _react["default"].createElement("script", {
      async: true,
      "custom-element": "amp-bind",
      src: "https://cdn.ampproject.org/v0/amp-bind-0.1.js"
    })), _react["default"].createElement("amp-state", props, _react["default"].createElement("script", {
      type: "application/json",
      dangerouslySetInnerHTML: {
        __html: JSON.stringify(initialState)
      }
    })), children);
  } else {
    return children;
  }
}

AmpState.propTypes = {
  /**
   * An id for the amp-state element
   */
  id: _propTypes["default"].string,

  /**
   * The initial value of the state
   */
  initialState: _propTypes["default"].any,

  /**
   * Object which contains the URL and expression for fetching
   * new state
   */
  remote: _propTypes["default"].object
};
AmpState.defaultProps = {
  initialState: {}
};

var _default = (0, _withDataBinding["default"])(AmpState);

exports["default"] = _default;
//# sourceMappingURL=AmpState.js.map