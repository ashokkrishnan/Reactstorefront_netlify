{
  "version": 3,
  "sources": ["../../node_modules/dotenv/lib/main.js", "../../layer0.config.js"],
  "sourcesContent": ["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\n|\\r|\\r\\n/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n", "require('dotenv').config()\nconst { join } = require('path')\n\nmodule.exports = {\n  connector: '@layer0/next',\n  prerenderConcurrency: 200,\n  includeFiles: {\n    [join('.next', 'BUILD_ID')]: true,\n  },\n  backends: {\n    legacy: {\n      domainOrIp: process.env.LEGACY_BACKEND_DOMAIN || 'www.ebay.com',\n      hostHeader: process.env.LEGACY_BACKEND_HOST_HEADER || 'www.ebay.com',\n    },\n  },\n}\n"],
  "mappings": "8DAAA,gBAuBA,GAAM,GAAK,QAAQ,MACb,EAAO,QAAQ,QAErB,WAAc,EAAuB,CACnC,QAAQ,IAAI,mBAAmB,KAGjC,GAAM,GAAU;AAAA,EACV,EAAiB,gCACjB,EAAc,OACd,EAAiB,aAGvB,WAAgB,EAA4B,EAA6D,CACvG,GAAM,GAAQ,QAAQ,GAAW,EAAQ,OACnC,EAAM,GAGZ,SAAI,WAAW,MAAM,GAAgB,QAAQ,SAAU,EAAM,EAAK,CAEhE,GAAM,GAAc,EAAK,MAAM,GAE/B,GAAI,GAAe,KAAM,CACvB,GAAM,GAAM,EAAY,GAEpB,EAAO,EAAY,IAAM,GACvB,EAAM,EAAI,OAAS,EACnB,EAAiB,EAAI,KAAO,KAAO,EAAI,KAAS,IAItD,AAAI,AAHmB,EAAI,KAAO,KAAO,EAAI,KAAS,KAGhC,EACpB,GAAM,EAAI,UAAU,EAAG,GAGnB,GACF,GAAM,EAAI,QAAQ,EAAa,KAIjC,EAAM,EAAI,OAGZ,EAAI,GAAO,MACN,AAAI,IACT,EAAI,iDAAiD,EAAM,MAAM,OAI9D,EAIT,WAAiB,EAA+D,CAC9E,GAAI,GAAa,EAAK,QAAQ,QAAQ,MAAO,QACzC,EAAyB,OACzB,EAAQ,GAEZ,AAAI,GACE,GAAQ,MAAQ,MAClB,GAAa,EAAQ,MAEnB,EAAQ,UAAY,MACtB,GAAW,EAAQ,UAEjB,EAAQ,OAAS,MACnB,GAAQ,KAIZ,GAAI,CAEF,GAAM,GAAS,EAAM,EAAG,aAAa,EAAY,CAAE,aAAa,CAAE,UAElE,cAAO,KAAK,GAAQ,QAAQ,SAAU,EAAK,CACzC,AAAK,OAAO,UAAU,eAAe,KAAK,QAAQ,IAAK,GAE5C,GACT,EAAI,IAAI,wEAFR,QAAQ,IAAI,GAAO,EAAO,KAMvB,CAAE,gBACF,EAAP,CACA,MAAO,CAAE,MAAO,IAIpB,EAAO,QAAQ,OAAS,EACxB,EAAO,QAAQ,MAAQ,IChHvB,IAAkB,SAClB,GAAM,CAAE,QAAS,QAAQ,QAEzB,OAAO,QAAU,CACf,UAAW,eACX,qBAAsB,IACtB,aAAc,EACX,EAAK,QAAS,aAAc,IAE/B,SAAU,CACR,OAAQ,CACN,WAAY,QAAQ,IAAI,uBAAyB,eACjD,WAAY,QAAQ,IAAI,4BAA8B",
  "names": []
}
